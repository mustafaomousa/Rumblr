[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/BreadcrumbNavigation/index.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/ProtectedRoute.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Footer/index.js":"25","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/index.js":"26","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/EditPost/index.js":"27","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/DeletePost/index.js":"28","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/index.js":"29","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/index.js":"30","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateBio.js":"31","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePersonalInformation.js":"32","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateProfilePicture.js":"33","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePassword.js":"34","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ScrollToTop/index.js":"35","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/About/index.js":"36","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LargeFooter/index.js":"37"},{"size":1752,"mtime":1640990360687,"results":"38","hashOfConfig":"39"},{"size":1779,"mtime":1641667453794,"results":"40","hashOfConfig":"39"},{"size":741,"mtime":1640622846248,"results":"41","hashOfConfig":"39"},{"size":2517,"mtime":1640619886868,"results":"42","hashOfConfig":"39"},{"size":5577,"mtime":1640661053827,"results":"43","hashOfConfig":"39"},{"size":857,"mtime":1634582668536,"results":"44","hashOfConfig":"39"},{"size":776,"mtime":1640190454381,"results":"45","hashOfConfig":"39"},{"size":10326,"mtime":1640993340366,"results":"46","hashOfConfig":"39"},{"size":1631,"mtime":1640898784873,"results":"47","hashOfConfig":"39"},{"size":3683,"mtime":1640989374213,"results":"48","hashOfConfig":"39"},{"size":323,"mtime":1633891798486,"results":"49","hashOfConfig":"39"},{"size":991,"mtime":1640903401136,"results":"50","hashOfConfig":"39"},{"size":1169,"mtime":1634584841431,"results":"51","hashOfConfig":"39"},{"size":216,"mtime":1640367108070,"results":"52","hashOfConfig":"39"},{"size":3561,"mtime":1640987507353,"results":"53","hashOfConfig":"39"},{"size":4050,"mtime":1640662315736,"results":"54","hashOfConfig":"39"},{"size":4507,"mtime":1640993352551,"results":"55","hashOfConfig":"39"},{"size":1111,"mtime":1640992196505,"results":"56","hashOfConfig":"39"},{"size":2053,"mtime":1640993351855,"results":"57","hashOfConfig":"39"},{"size":5777,"mtime":1640992878127,"results":"58","hashOfConfig":"39"},{"size":164,"mtime":1640553844890,"results":"59","hashOfConfig":"39"},{"size":461,"mtime":1640653915498,"results":"60","hashOfConfig":"39"},{"size":1581,"mtime":1640994030316,"results":"61","hashOfConfig":"39"},{"size":372,"mtime":1640908688589,"results":"62","hashOfConfig":"39"},{"size":1321,"mtime":1640991999894,"results":"63","hashOfConfig":"39"},{"size":5368,"mtime":1640993347674,"results":"64","hashOfConfig":"39"},{"size":1795,"mtime":1640650995434,"results":"65","hashOfConfig":"39"},{"size":1696,"mtime":1640661765330,"results":"66","hashOfConfig":"39"},{"size":542,"mtime":1641667158650,"results":"67","hashOfConfig":"39"},{"size":2293,"mtime":1641667717183,"results":"68","hashOfConfig":"39"},{"size":2202,"mtime":1640902964525,"results":"69","hashOfConfig":"39"},{"size":2853,"mtime":1640902936064,"results":"70","hashOfConfig":"39"},{"size":2410,"mtime":1640902472744,"results":"71","hashOfConfig":"39"},{"size":3137,"mtime":1640902954514,"results":"72","hashOfConfig":"39"},{"size":785,"mtime":1640992720644,"results":"73","hashOfConfig":"39"},{"size":382,"mtime":1641078864150,"results":"74","hashOfConfig":"39"},{"size":3610,"mtime":1641667397917,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"sdhkcj",{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["157","158"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["159","160"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["161","162"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js",["163","164","165"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isMobile } from \"react-device-detect\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Stack,\n  Grid,\n  Skeleton,\n  Box,\n  Avatar,\n  Link,\n  CircularProgress,\n  Divider,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Post from \"../Post\";\nimport { getPosts } from \"../../store/post\";\nimport CheckoutPost from \"./CheckoutPost\";\nimport NewestMembers from \"./NewestMembers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: 75,\n    flexDirection: isMobile && \"column-reverse\",\n    alignItems: isMobile && \"center\",\n    [theme.breakpoints.only(\"sm\")]: {\n      flexDirection: \"column-reverse\",\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      flexDirection: \"column-reverse\",\n    },\n  },\n  stickyAvatar: {\n    position: \"sticky\",\n    top: \"65px\",\n    height: \"60px\",\n    width: \"60px\",\n    backgroundColor: \"#e8e8e8\",\n  },\n  postContainer: {\n    justifyContent: !isMobile && \"flex-end\",\n    [theme.breakpoints.only(\"sm\")]: {\n      justifyContent: \"center\",\n      marginLeft: -50,\n    },\n    paddingRight: !isMobile && 10,\n  },\n  extrasContainer: {\n    [theme.breakpoints.only(\"sm\")]: {\n      justifyContent: \"center\",\n      width: \"100%\",\n      paddingRight: 30,\n      paddingBottom: 30,\n    },\n    paddingLeft: !isMobile && 10,\n    paddingBottom: isMobile && 30,\n  },\n  avatarBox: {\n    [theme.breakpoints.only(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  extrasStack: {\n    maxWidth: 500,\n    [theme.breakpoints.only(\"sm\")]: {\n      alignItems: \"center\",\n      maxWidth: 500,\n    },\n  },\n}));\n\nconst Discover = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [loadLimit, setLoadLimit] = useState(5);\n  const [morePostsLoading, setMorePostsLoading] = useState(false);\n  const sessionUser = useSelector((state) => state.session.user);\n  const posts = useSelector((state) => state.posts.loadedPosts);\n\n  const handleScroll = () => {\n    const bottom =\n      Math.ceil(window.innerHeight + window.scrollY) >=\n      document.documentElement.scrollHeight;\n\n    if (bottom) {\n      setMorePostsLoading(true);\n      setLoadLimit(loadLimit + 5);\n    }\n  };\n\n  useEffect(() => {\n    if (!sessionUser) return <Redirect to=\"/\" />;\n    dispatch(getPosts(loadLimit));\n  }, [dispatch, loadLimit, sessionUser]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  useEffect(() => {\n    document.title = \"Rumblr - Discover\";\n  }, []);\n\n  if (!sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    <Grid className={classes.root} container direction=\"row\">\n      <Grid item container sm={12} md={6} className={classes.postContainer}>\n        {posts ? (\n          <Stack spacing={3} height=\"100%\" alignItems=\"flex-end\">\n            {posts.map((post) => {\n              return (\n                <Stack direction=\"row\" key={post.id}>\n                  <Box sx={{ padding: \"0 15px\" }} display={isMobile && \"none\"}>\n                    <Link href={`/users/${post.User.id}`}>\n                      <Avatar\n                        src={post.User.profilePicture}\n                        variant=\"square\"\n                        className={classes.stickyAvatar}\n                      />\n                    </Link>\n                  </Box>\n                  <Box maxWidth={500}>\n                    <Post key={post.id} post={post} />\n                  </Box>\n                </Stack>\n              );\n            })}\n          </Stack>\n        ) : (\n          <Stack spacing={3} alignItems=\"flex-end\">\n            <Skeleton\n              animation=\"wave\"\n              variant=\"rectangular\"\n              height={500}\n              width={500}\n            />\n            <Skeleton\n              animation=\"wave\"\n              variant=\"rectangular\"\n              height={500}\n              width={500}\n            />\n            <Skeleton\n              animation=\"wave\"\n              variant=\"rectangular\"\n              height={500}\n              width={500}\n            />\n          </Stack>\n        )}\n      </Grid>\n      <Grid item container sm={12} md={6} className={classes.extrasContainer}>\n        <Stack spacing={3} width=\"100%\" className={classes.extrasStack}>\n          <NewestMembers />\n          {!isMobile && <CheckoutPost />}\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Discover;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js",[],["166","167"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/BreadcrumbNavigation/index.js",["168"],"import { Breadcrumbs, Container, Link } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\n\nconst BreadcrumbNavigation = () => {\n  const location = useLocation();\n  const [path, setPath] = useState(\"\");\n\n  useEffect(() => {\n    let pathArray = location.pathname.split(\"/\");\n    pathArray.shift();\n    setPath(pathArray);\n  }, [location]);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: \"55px\",\n        width: \"100%\",\n      }}\n    >\n      <Container>\n        <Breadcrumbs\n          sx={{ maxWidth: \"1200px\", padding: \"20px 20px\" }}\n          separator={<ChevronRightIcon color=\"secondary\" />}\n        >\n          <Link\n            underline={path == \"discover\" ? \"always\" : \"hover\"}\n            color=\"secondary\"\n            href=\"/discover\"\n          >\n            Discover\n          </Link>\n          {path &&\n            path.map(\n              (pathname) =>\n                pathname &&\n                pathname !== \"discover\" && (\n                  <Link\n                    underline=\"always\"\n                    color=\"secondary\"\n                    href={`/${pathname}`}\n                  >\n                    {pathname[0].toUpperCase() + pathname.slice(1)}\n                  </Link>\n                )\n            )}\n        </Breadcrumbs>\n      </Container>\n    </Box>\n  );\n};\n\nexport default BreadcrumbNavigation;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/ProtectedRoute.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Footer/index.js",["169","170"],"import { AppBar, Box, Container, IconButton, Link, Stack } from \"@mui/material\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    height: 55,\n    width: \"100%\",\n    backgroundColor: \"#333A56\",\n    borderTop: \"1px solid #405368\",\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        height=\"100%\"\n        padding=\"0 30px\"\n      >\n        <Link href=\"https://github.com/mustafaomousa\">\n          <IconButton>\n            <GitHubIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n        <Link href=\"https://www.linkedin.com/in/mustafa-mousa-8b8053157/\">\n          <IconButton>\n            <LinkedInIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n        <Link href=\"mailto:contact@mustafamousa.com\">\n          <IconButton>\n            <EmailIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Footer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/EditPost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/DeletePost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/index.js",["171"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateBio.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePersonalInformation.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateProfilePicture.js",["172"],"import { Avatar, Button, Input, Stack, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport S3FileUpload from \"react-s3/lib/ReactS3\";\nimport { updateProfilePicture } from \"../../store/session\";\n\nconst useStyles = makeStyles((theme) => ({\n  userAvatar: {\n    width: \"100%\",\n  },\n  userAvatarBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst UpdateProfilePicture = ({ sessionUser }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: sessionUser.username.profile_picture,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const updateProfilePic = async (e) => {\n    e.preventDefault();\n\n    await S3FileUpload.uploadFile(e.target.files[0], config).then((data) => {\n      dispatch(updateProfilePicture(sessionUser.id, data.location));\n    });\n  };\n\n  const deleteProfilePic = async (e) => {\n    e.preventDefault();\n    await dispatch(updateProfilePicture(sessionUser.id, null));\n  };\n\n  return (\n    <Box>\n      <Box className={classes.userAvatarBox}>\n        <Avatar\n          variant=\"square\"\n          className={classes.userAvatar}\n          sx={{ width: \"100%\", height: \"auto\" }}\n          src={sessionUser.profilePicture}\n        />\n      </Box>\n      <Stack\n        spacing={1}\n        direction=\"row\"\n        marginTop={\"10px\"}\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n        height=\"100%\"\n      >\n        <Input\n          type=\"file\"\n          id=\"profile-image\"\n          sx={{ display: \"none\" }}\n          onChange={updateProfilePic}\n        />\n        <label htmlFor=\"profile-image\">\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            disableElevation\n            size=\"small\"\n            component=\"span\"\n            fullWidth\n          >\n            Upload Image\n          </Button>\n        </label>\n        <Button\n          disableElevation\n          color=\"warning\"\n          size=\"small\"\n          variant=\"contained\"\n          onClick={deleteProfilePic}\n          disabled={!sessionUser.profilePicture}\n        >\n          Delete\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default UpdateProfilePicture;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePassword.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ScrollToTop/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/About/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LargeFooter/index.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"181","line":4,"column":23,"nodeType":"179","messageId":"180","endLine":4,"endColumn":30},{"ruleId":"173","replacedBy":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","severity":1,"message":"184","line":12,"column":3,"nodeType":"179","messageId":"180","endLine":12,"endColumn":19},{"ruleId":"177","severity":1,"message":"181","line":13,"column":3,"nodeType":"179","messageId":"180","endLine":13,"endColumn":10},{"ruleId":"177","severity":1,"message":"185","line":76,"column":10,"nodeType":"179","messageId":"180","endLine":76,"endColumn":26},{"ruleId":"173","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":33,"column":29,"nodeType":"190","messageId":"191","endLine":33,"endColumn":31},{"ruleId":"177","severity":1,"message":"192","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"193","line":1,"column":23,"nodeType":"179","messageId":"180","endLine":1,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":12,"column":1,"nodeType":"196","endLine":23,"endColumn":3},{"ruleId":"177","severity":1,"message":"197","line":1,"column":40,"nodeType":"179","messageId":"180","endLine":1,"endColumn":50},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.",["198"],["199"],"'CircularProgress' is defined but never used.","'morePostsLoading' is assigned a value but never used.",["198"],["199"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Container' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]