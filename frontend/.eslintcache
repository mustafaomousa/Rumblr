[{"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/index.js":"1","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/App.js":"2","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/index.js":"3","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/csrf.js":"4","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/session.js":"5","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/LoginFormPage/index.js":"6","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SignupFormPage/index.js":"7","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/post.js":"9","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/CreatePost/index.js":"10","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/vehicle.js":"11","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/ProfilePage/index.js":"12","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/PostCard/index.js":"13","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/like.js":"14","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePage/index.js":"15","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePostCard/index.js":"16","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SearchResultsPage/index.js":"17","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SinglePost/index.js":"18","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/TagPage/index.js":"19","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/DiscoverPage/index.js":"20","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/AccountModal/index.js":"21","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SideNavigation/index.js":"22","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/AboutUsPage/index.js":"23"},{"size":895,"mtime":1611512341364,"results":"24","hashOfConfig":"25"},{"size":1995,"mtime":1611960874163,"results":"26","hashOfConfig":"25"},{"size":855,"mtime":1611534641819,"results":"27","hashOfConfig":"25"},{"size":787,"mtime":1611343399088,"results":"28","hashOfConfig":"25"},{"size":2915,"mtime":1611853026043,"results":"29","hashOfConfig":"25"},{"size":2427,"mtime":1612123783103,"results":"30","hashOfConfig":"25"},{"size":3392,"mtime":1611889455471,"results":"31","hashOfConfig":"25"},{"size":3082,"mtime":1611958948368,"results":"32","hashOfConfig":"25"},{"size":3174,"mtime":1612125492314,"results":"33","hashOfConfig":"25"},{"size":4419,"mtime":1611814708556,"results":"34","hashOfConfig":"25"},{"size":774,"mtime":1611524252464,"results":"35","hashOfConfig":"25"},{"size":4229,"mtime":1612131701736,"results":"36","hashOfConfig":"25"},{"size":5705,"mtime":1612131521012,"results":"37","hashOfConfig":"25"},{"size":1465,"mtime":1611594901082,"results":"38","hashOfConfig":"25"},{"size":1595,"mtime":1611680150464,"results":"39","hashOfConfig":"25"},{"size":2005,"mtime":1611875412133,"results":"40","hashOfConfig":"25"},{"size":1597,"mtime":1611873334006,"results":"41","hashOfConfig":"25"},{"size":2887,"mtime":1611710875448,"results":"42","hashOfConfig":"25"},{"size":1774,"mtime":1611963952404,"results":"43","hashOfConfig":"25"},{"size":3710,"mtime":1612127013048,"results":"44","hashOfConfig":"25"},{"size":1280,"mtime":1611888223847,"results":"45","hashOfConfig":"25"},{"size":1117,"mtime":1611958552047,"results":"46","hashOfConfig":"25"},{"size":1886,"mtime":1611963913319,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"mdejc3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/index.js",[],["100","101"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/App.js",["102"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/csrf.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/session.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/LoginFormPage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SignupFormPage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/post.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/CreatePost/index.js",["103"],"import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createNewPost } from '../../store/post'\n\nimport './new-post.css';\n\nconst CreatePost = ({ user, makes, models }) => {\n    const dispatch = useDispatch();\n\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [body, setBody] = useState('');\n    const [makeId, setMakeId] = useState(0);\n    const [modelId, setModelId] = useState(0);\n\n    const updateTitle = (e) => setTitle(e.target.value);\n    const updateContent = (e) => setContent(e.target.value);\n    const updateBody = (e) => setBody(e.target.value);\n    const updateMake = (e) => setMakeId(e.target.value);\n    const updateModel = (e) => setModelId(e.target.value);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const tags = body.match(/#[A-Za-z0-9]*/g)\n\n        const payload = {\n            title,\n            content,\n            body,\n            tags,\n            makeId,\n            modelId,\n            userId: user.id\n        };\n        dispatch(createNewPost(payload));\n        resetFields();\n    };\n\n    const resetFields = () => {\n        setTitle('');\n        setContent('');\n        setBody('');\n        setMakeId(0);\n        setModelId(0);\n    };\n\n    return (\n        <div className='create-post'>\n            <div className='create-post-container speech-bubble'>\n                <div className='create-post-form'>\n                    <form onSubmit={onSubmit}>\n                        <div className='input-container'>\n                            <div className='post-information-container'>\n                                <div className='label'>\n                                    <label>Title:</label>\n                                    <label>Elaborate:</label>\n                                </div>\n                                <div className='input'>\n                                    <input onChange={updateTitle} value={title} placeholder='title'></input>\n                                    <textarea onChange={updateBody} value={body} placeholder=\"what's on your mind?\"></textarea>\n                                </div>\n                            </div>\n                            <div className='upload-media-container'>\n                                <div className='label'>\n                                    <label>Show me:</label>\n                                </div>\n                                <div className='input'>\n                                    <input onChange={updateContent} value={content} placeholder='image url'></input>\n                                </div>\n                            </div>\n                            <label id='label'>Wow.. which car again?</label>\n                            <div className='vehicle-select-container'>\n                                <>\n                                    <select onChange={updateMake} value={makeId}>\n                                        <option value={0}>Select a Make</option>\n                                        {makes && makes.map((make, idx) => {\n                                            return (\n                                                <option value={make.id} key={idx}>{make.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </>\n                                <>\n                                    <select onChange={updateModel} value={modelId}>\n                                        <option value={0}>Select a Model</option>\n                                        {models && models.map((model, idx) => {\n                                            return (\n                                                <option value={model.id} key={idx}>{model.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </>\n                            </div>\n                        </div>\n                        <div className='post-button-container'>\n                            <button id='submit-button' type='submit'>Create Post</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default CreatePost;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/vehicle.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/ProfilePage/index.js",["104","105","106","107","108","109","110","111","112","113","114"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/PostCard/index.js",["115"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/like.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePostCard/index.js",["116","117","118","119","120"],"import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import ReactPlayer from 'react-player'\n\nimport { createNewLike, deleteLike } from '../../store/like';\nimport './welcome.css'\n\nconst WelcomePostCard = ({ post }) => {\n\n\n    let listOfTags = [];\n\n    return (\n        <div className={'post-card'}>\n            <div className='post-title-container'>\n                <div className='user-icon-container'>\n                    {/* <img id='user-icon' src={post.User.profilePicture}></img> */}\n                </div>\n                <div className='user-post-link-container'>\n                    <Link className='username' to={`/${post.User.username}`} id='tag'>{post.title}</Link>\n                </div>\n            </div>\n            <div className='post-media'>\n                {post.content.includes('youtube') && (\n                    <p>Video Player Here</p>\n                    // <ReactPlayer width='450px' height='250px' url={post.content} />\n                )}\n                <img src={post.content} alt='' />\n            </div>\n            <div className='post-body'>\n                <Link className='username' to={`/${post.User.username}`}>{post.User.username}:</Link>\n                <p>{post.body.split(' ').map((string, index) => {\n                    if (listOfTags.includes(string)) {\n                        return <Link key={index} to={`/tag/${string.replace('#', '')}`}>{` ${string}`}</Link>\n                    } else {\n                        return ` ${string}`\n                    }\n                })}</p>\n            </div>\n            <div className='user-control-panel'>\n                <div className='user-control-buttons'>\n                    <i id='heart' className=\"far fa-heart selected\"></i>\n                    <i className='fas fa-retweet'></i>\n                </div>\n                <p id='like-count'> Rumbles</p>\n            </div>\n        </div>\n    )\n};\n\nexport default WelcomePostCard;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SearchResultsPage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SinglePost/index.js",["121"],"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import ReactPlayer from 'react-player'\n\nimport { createNewLike, deleteLike } from '../../store/like';\nimport './single-post.css'\n\nconst SinglePost = ({ post }) => {\n    const dispatch = useDispatch();\n    const [liked, setLiked] = useState(false);\n    const sessionUser = useSelector(state => state.session.user);\n    const postLikes = useSelector(state => state.likes.likes.filter(like => like.postId === post.id));\n    const userLikes = useSelector(state => state.likes.likes.filter(like => like.userId === sessionUser.id && like.postId === post.id));\n\n    let like = null;\n    if (userLikes.shift !== undefined) {\n        like = userLikes.shift()\n    };\n\n\n    const likePost = (e) => {\n        e.preventDefault();\n        setLiked(true);\n        const userId = sessionUser.id;\n        const postId = post.id;\n        const payload = { userId, postId };\n\n        dispatch(createNewLike(payload));\n    };\n\n    const removeLike = (e) => {\n        e.preventDefault();\n\n        const userId = sessionUser.id;\n        const postId = post.id;\n        const payload = { userId, postId };\n\n        dispatch(deleteLike(payload));\n        setLiked(false);\n    };\n\n    useEffect(() => {\n        if (like) setLiked(true);\n    }, [like])\n\n    return (\n        <div className={'single-post-card'}>\n            <div className='post-title-container'>\n                <div className='user-icon-container'>\n                    <img id='user-icon' src={post.User.profilePicture}></img>\n                </div>\n                <div className='user-post-link-container'>\n                    <Link to={`/${post.User.username}`}>{post.title}</Link>\n                </div>\n            </div>\n            <div className='post-media'>\n                {post.content.includes('youtube') && (\n                    <p>Video Player Here</p>\n                    // <ReactPlayer width='450px' height='250px' url={post.content} />\n                )}\n                <img src={post.content} alt='' />\n            </div>\n            <div className='post-body'>\n                <Link id='username' to={`/${post.User.username}`}>{post.User.username}:</Link>\n                <p id='title'>{post.body}</p>\n            </div>\n            <div className='user-control-panel'>\n                {liked && (\n                    <>\n                        <i onClick={removeLike} id='heart' className=\"far fa-heart selected\"></i>\n                    </>\n                )}\n                {!liked && (\n                    <>\n                        <i onClick={likePost} id='heart' className=\"far fa-heart\"></i>\n                    </>\n                )}\n                <p id='like-count'>{postLikes.length} likes</p>\n            </div>\n        </div>\n    )\n};\n\nexport default SinglePost;",["122","123"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/TagPage/index.js",["124","125","126"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/DiscoverPage/index.js",["127","128"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/AccountModal/index.js",["129"],"\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../../store/session';\nimport './account.css'\n\n\n\nconst AccountModal = ({ sessionUser }) => {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.session.allUsers.find(user => user.username === sessionUser.username))\n\n    useEffect(() => {\n        dispatch(getAllUsers())\n    }, [dispatch])\n\n    return (\n        <div className='account-container'>\n            <div className='account-container-header'>\n                <img id='picture' src={user.profilePicture}></img>\n            </div>\n            <div className='account-container-body'>\n                <p>Header: </p>\n                <h4>{user.header}</h4>\n                <div id='account-divider' />\n                <p>Bio: </p>\n                <h4>{user.bio}</h4>\n                <div id='account-divider' />\n                <p>Username:</p>\n                <h4>{user.username}</h4>\n            </div>\n            <div className='account-container-footer'>\n                <button>Change Password</button>\n                <button>Change e-mail</button>\n                <button>Delete Account</button>\n            </div>\n        </div>\n    )\n};\n\nexport default AccountModal;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SideNavigation/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/AboutUsPage/index.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":17,"column":8,"nodeType":"136","messageId":"137","endLine":17,"endColumn":22},{"ruleId":"134","severity":1,"message":"138","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":19},{"ruleId":"134","severity":1,"message":"139","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":21},{"ruleId":"134","severity":1,"message":"140","line":5,"column":23,"nodeType":"136","messageId":"137","endLine":5,"endColumn":40},{"ruleId":"134","severity":1,"message":"141","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":6,"column":20,"nodeType":"136","messageId":"137","endLine":6,"endColumn":32},{"ruleId":"134","severity":1,"message":"143","line":6,"column":34,"nodeType":"136","messageId":"137","endLine":6,"endColumn":41},{"ruleId":"134","severity":1,"message":"144","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":18},{"ruleId":"134","severity":1,"message":"145","line":14,"column":11,"nodeType":"136","messageId":"137","endLine":14,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":39,"column":21,"nodeType":"148","endLine":39,"endColumn":80},{"ruleId":"149","severity":1,"message":"150","line":49,"column":72,"nodeType":"151","messageId":"152","endLine":49,"endColumn":74},{"ruleId":"146","severity":1,"message":"147","line":74,"column":21,"nodeType":"148","endLine":74,"endColumn":80},{"ruleId":"149","severity":1,"message":"150","line":84,"column":59,"nodeType":"151","messageId":"152","endLine":84,"endColumn":61},{"ruleId":"134","severity":1,"message":"142","line":10,"column":26,"nodeType":"136","messageId":"137","endLine":10,"endColumn":38},{"ruleId":"134","severity":1,"message":"153","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":18},{"ruleId":"134","severity":1,"message":"154","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":21},{"ruleId":"134","severity":1,"message":"155","line":2,"column":23,"nodeType":"136","messageId":"137","endLine":2,"endColumn":34},{"ruleId":"134","severity":1,"message":"156","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":23},{"ruleId":"134","severity":1,"message":"157","line":6,"column":25,"nodeType":"136","messageId":"137","endLine":6,"endColumn":35},{"ruleId":"146","severity":1,"message":"147","line":51,"column":21,"nodeType":"148","endLine":51,"endColumn":72},{"ruleId":"130","replacedBy":"158"},{"ruleId":"132","replacedBy":"159"},{"ruleId":"134","severity":1,"message":"160","line":11,"column":11,"nodeType":"136","messageId":"137","endLine":11,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":18,"column":52,"nodeType":"163","messageId":"164","endLine":18,"endColumn":53,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":22,"column":8,"nodeType":"168","endLine":22,"endColumn":18,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"147","line":51,"column":41,"nodeType":"148","endLine":51,"endColumn":102},{"ruleId":"149","severity":1,"message":"150","line":77,"column":55,"nodeType":"151","messageId":"152","endLine":77,"endColumn":57},{"ruleId":"146","severity":1,"message":"147","line":20,"column":17,"nodeType":"148","endLine":20,"endColumn":61},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'SideNavigation' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getAllUsers' is defined but never used.","'getAllNewestUsers' is defined but never used.","'getPosts' is defined but never used.","'getRerumbles' is defined but never used.","'getTags' is defined but never used.","'getLikes' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'createNewLike' is defined but never used.","'deleteLike' is defined but never used.",["170"],["171"],"'history' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["172","173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchedTag'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-global-assign","no-unsafe-negation",{"messageId":"175","fix":"176","desc":"177"},{"messageId":"178","fix":"179","desc":"180"},{"desc":"181","fix":"182"},"removeEscape",{"range":"183","text":"184"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"185","text":"186"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [dispatch, searchedTag]",{"range":"187","text":"188"},[594,595],"",[594,594],"\\",[685,695],"[dispatch, searchedTag]"]