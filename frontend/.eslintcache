[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js":"22"},{"size":1042,"mtime":1633891798490,"results":"23","hashOfConfig":"24"},{"size":1667,"mtime":1634418754108,"results":"25","hashOfConfig":"24"},{"size":787,"mtime":1633891798490,"results":"26","hashOfConfig":"24"},{"size":2290,"mtime":1634334819756,"results":"27","hashOfConfig":"24"},{"size":2558,"mtime":1634168567949,"results":"28","hashOfConfig":"24"},{"size":786,"mtime":1633986285566,"results":"29","hashOfConfig":"24"},{"size":625,"mtime":1634334714253,"results":"30","hashOfConfig":"24"},{"size":3046,"mtime":1634331234018,"results":"31","hashOfConfig":"24"},{"size":1813,"mtime":1634418840141,"results":"32","hashOfConfig":"24"},{"size":4830,"mtime":1634419586309,"results":"33","hashOfConfig":"24"},{"size":863,"mtime":1633891798490,"results":"34","hashOfConfig":"24"},{"size":3282,"mtime":1634331390416,"results":"35","hashOfConfig":"24"},{"size":1320,"mtime":1634419007691,"results":"36","hashOfConfig":"24"},{"size":2799,"mtime":1634332987429,"results":"37","hashOfConfig":"24"},{"size":2943,"mtime":1634332052260,"results":"38","hashOfConfig":"24"},{"size":323,"mtime":1633891798486,"results":"39","hashOfConfig":"24"},{"size":3481,"mtime":1634335400614,"results":"40","hashOfConfig":"24"},{"size":1746,"mtime":1634419216242,"results":"41","hashOfConfig":"24"},{"size":1370,"mtime":1634169869005,"results":"42","hashOfConfig":"24"},{"size":333,"mtime":1634169802572,"results":"43","hashOfConfig":"24"},{"size":3853,"mtime":1634417483678,"results":"44","hashOfConfig":"24"},{"size":1748,"mtime":1634332307452,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"sdhkcj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["99","100"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["101"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js",["102","103","104"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  CardHeader,\n  Typography,\n  CardActions,\n  Input,\n  Avatar,\n  Alert,\n} from \"@mui/material\";\nimport \"./login.css\";\n\nimport * as sessionActions from \"../../store/session\";\nimport { Box } from \"@mui/system\";\n\nconst LoginFormPage = ({ switchToSignup }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateCredential = (e) => setCredential(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    dispatch(sessionActions.login(credential, password)).catch((res) => {\n      setErrors(res.data.errors);\n    });\n\n    // return history.push(\"/discover\");\n  };\n\n  const demoLogin = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    let demoCredential = \"demo-user\";\n    let demoPassword = \"password\";\n    dispatch(sessionActions.login(demoCredential, demoPassword)).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n\n    // return history.push(\"/discover\");\n  };\n\n  return (\n    <Card>\n      <form onSubmit={onSubmit} className=\"LoginFormPage\">\n        <CardHeader\n          align=\"center\"\n          subheader=\"Log in\"\n          title={\n            <Typography\n              sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n            >\n              Rumblr\n            </Typography>\n          }\n        />\n        <CardContent>\n          <div className=\"LoginForm\">\n            <TextField\n              size=\"small\"\n              id=\"input\"\n              type=\"text\"\n              onChange={updateCredential}\n              value={credential}\n              label=\"username/email\"\n              required\n            />\n            <br />\n            <TextField\n              id=\"input\"\n              size=\"small\"\n              type=\"password\"\n              onChange={updatePassword}\n              value={password}\n              label=\"password\"\n              required\n            />\n          </div>\n          <Box sx={{ paddingTop: \"20px\" }}>\n            {errors &&\n              errors.map((error) => <Alert severity=\"error\">{error}</Alert>)}\n          </Box>\n        </CardContent>\n        <CardActions className=\"LoginFormFooter\">\n          <div>\n            <Button onClick={switchToSignup}>Switch to sign up</Button>\n          </div>\n          <div>\n            <Button type=\"submit\">Log in</Button>\n            <Button onClick={demoLogin}>Demo</Button>\n          </div>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nexport default LoginFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js",["105"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",["106","107","108"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js",["109","110","111"],"import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  Button,\n  Alert,\n  Input,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport * as sessionActions from \"../../store/session\";\n\nimport \"./signup.css\";\n\nconst SignupFormPage = ({ switchToLogin }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateUsername = (e) => setUsername(e.target.value);\n  const updateEmail = (e) => setEmail(e.target.value);\n  const updatedPassword = (e) => setPassword(e.target.value);\n  const updatedConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n\n      const payload = {\n        email,\n        username,\n        password,\n      };\n\n      dispatch(sessionActions.signup(payload)).catch((res) => {\n        console.log(res);\n        setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors([\n      \"Confirm Password field must be the same as the Password\",\n    ]);\n  };\n\n  return (\n    <Card className=\"SignupFormPage\">\n      <CardHeader\n        align=\"center\"\n        subheader=\"Sign up\"\n        title={\n          <Typography\n            sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n          >\n            Rumblr\n          </Typography>\n        }\n      />\n      <CardContent>\n        <form className=\"SignupForm\">\n          <TextField\n            onChange={updateUsername}\n            size=\"small\"\n            value={username}\n            label=\"create a username\"\n            required\n          />\n          <br />\n          <TextField\n            size=\"small\"\n            onChange={updateEmail}\n            value={email}\n            label=\"enter email\"\n            required\n          />\n          <br />\n          <TextField\n            size=\"small\"\n            type=\"password\"\n            onChange={updatedPassword}\n            label=\"create a password\"\n            required\n          />\n          <br />\n          <TextField\n            size=\"small\"\n            type=\"password\"\n            onChange={updatedConfirmPassword}\n            label=\"confirm password\"\n            required\n          />\n        </form>\n        {errors && (\n          <Box sx={{ paddingTop: \"20px\" }}>\n            {errors.map((error) => (\n              <Alert severity=\"error\">{error}</Alert>\n            ))}\n          </Box>\n        )}\n      </CardContent>\n      <CardActions className=\"SignupFormFooter\">\n        <div>\n          <Button onClick={switchToLogin}>Switch to log in</Button>\n        </div>\n        <div>\n          <Button onClick={onSubmit}>Join</Button>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SignupFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["112","113"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Card,\n  Button,\n  TextField,\n  CardContent,\n  CardActions,\n  IconButton,\n  Input,\n  CardMedia,\n} from \"@mui/material\";\nimport { createNewPost } from \"../../store/post\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nimport S3FileUpload from \"react-s3\";\n\nconst CreatePost = ({ user, setCreatePostVisible, alertCreatePostSuccess }) => {\n  const dispatch = useDispatch();\n\n  const [body, setBody] = useState(\"\");\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n  const updateBody = (e) => setBody(e.target.value);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: user.username,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    S3FileUpload.uploadFile(selectedImage, config)\n      .then((data) => {\n        dispatch(\n          createNewPost({ content: data.location, body, tags, userId: user.id })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n          alertCreatePostSuccess();\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Card className=\"CreatePost\" sx={{ width: \"500px\", marginBottom: \"20px\" }}>\n      <form>\n        <CardContent>\n          {selectedImage && (\n            <CardMedia\n              component=\"img\"\n              image={URL.createObjectURL(selectedImage)}\n            />\n          )}\n          <label>\n            <Input\n              accept=\"image/*\"\n              onChange={updateSelectedImage}\n              style={{ display: \"none\" }}\n              type=\"file\"\n            />\n            {!selectedImage && (\n              <Button\n                sx={{\n                  width: \"100%\",\n                  minHeight: \"200px\",\n                  border: \"1px slategray dotted\",\n                }}\n                component=\"span\"\n              >\n                Upload\n              </Button>\n            )}\n          </label>\n          <TextField\n            size=\"small\"\n            onChange={updateBody}\n            value={body}\n            label=\"Body\"\n            multiline\n            sx={{ width: \"100%\", marginTop: \"10px\" }}\n          />\n        </CardContent>\n        <CardActions sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton>\n            <SendIcon onClick={onSubmit} />\n          </IconButton>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",["114","115","116","117","118","119","120"],"import {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport SmartButtonIcon from \"@mui/icons-material/PushPin\";\nimport HeartButtonIcon from \"@mui/icons-material/ThumbUp\";\nimport CancelTwoToneIcon from \"@mui/icons-material/CancelTwoTone\";\nimport DeletePost from \"./DeletePost\";\nimport { useSelector } from \"react-redux\";\n\nimport { useEffect, useState } from \"react\";\nimport ProfileDrawer from \"../ProfileDrawer\";\nimport { Box } from \"@mui/system\";\nimport EditPost from \"../EditPost\";\nimport Notification from \"../Notification\";\n\nconst PostCard = ({ post }) => {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const [profileDrawerOpen, setProfileDrawerOpen] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n\n  const closeAlertUpdateBodySuccess = () => setSuccessNotificationOpen(false);\n  const alertUpdateBodySuccess = () => setSuccessNotificationOpen(true);\n  const closeProfileDrawer = () => setProfileDrawerOpen(false);\n  const openProfileDrawer = () => setProfileDrawerOpen(true);\n  const closeEditOpen = () => setEditOpen(false);\n  const openEditOpen = () => setEditOpen(true);\n\n  return (\n    <Card sx={{ width: \"550px\", borderRadius: \"0.1em\" }}>\n      <Notification\n        open={successNotificationOpen}\n        handleClose={closeAlertUpdateBodySuccess}\n        message={\"Post updated\"}\n      />\n      <ProfileDrawer\n        userId={post.userId}\n        profileDrawerOpen={profileDrawerOpen}\n        closeProfileDrawer={closeProfileDrawer}\n      />\n      <CardHeader\n        avatar={\n          <Avatar src={post.User.profilePicture} onClick={openProfileDrawer} />\n        }\n        action={\n          sessionUser.id === post.User.id && (\n            <>\n              <IconButton aria-describedby=\"delete-post\">\n                <DeletePost postId={post.id} />\n              </IconButton>\n              {editOpen ? (\n                <IconButton onClick={closeEditOpen}>\n                  <CancelTwoToneIcon sx={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                <IconButton onClick={openEditOpen}>\n                  <EditIcon />\n                </IconButton>\n              )}\n            </>\n          )\n        }\n        title={post.User.username}\n      />\n      <CardMedia component=\"img\" image={post.content} alt=\"image\" />\n      <CardContent>\n        {editOpen ? (\n          <EditPost\n            post={post}\n            closeEditOpen={closeEditOpen}\n            alertUpdateBodySuccess={alertUpdateBodySuccess}\n          />\n        ) : (\n          <Typography variant=\"body1\">{post.body}</Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["121","122"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["123","124","125","126","127","128"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Drawer,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\nimport Notification from \"../Notification\";\nfunction srcset(image, size, rows = 1, cols = 1) {\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${\n      size * rows\n    }&fit=crop&auto=format&dpr=2 2x`,\n  };\n}\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value={0} sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value={1} sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value={0}>\n              <ImageList variant=\"quilted\" cols={2}>\n                {posts &&\n                  posts.map((post) => (\n                    <ImageListItem key={post.id}>\n                      <img {...srcset(post.content, 121)} loading=\"lazy\" />\n                    </ImageListItem>\n                    // <Card sx={{ padding: \"0.1em\" }}>\n                    //   <CardMedia\n                    //     image={post.content}\n                    //     component=\"img\"\n                    //     height=\"200px\"\n                    //   />\n                    //   <CardContent>\n                    //     <Typography>{post.body}</Typography>\n                    //   </CardContent>\n                    // </Card>\n                  ))}\n              </ImageList>\n              <Stack spacing={5}></Stack>\n            </TabPanel>\n            <TabPanel value={1}>hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",["129","130","131"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js",["132","133"],"import { FormControl, IconButton, TextField } from \"@mui/material\";\nimport ArrowForwardTwoToneIcon from \"@mui/icons-material/ArrowForwardTwoTone\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePost } from \"../../store/post\";\nimport Notification from \"../Notification\";\n\nconst EditPost = ({ post, closeEditOpen, alertUpdateBodySuccess }) => {\n  const dispatch = useDispatch();\n  const [body, setBody] = useState(post.body);\n\n  const updateBody = (e) => setBody(e.target.value);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dispatch(updatePost({ postId: post.id, body }))\n      .then(() => alertUpdateBodySuccess())\n      .then(() => closeEditOpen())\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <form\n      style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n      className=\"EditPost\"\n      onSubmit={onSubmit}\n    >\n      <TextField\n        placeholder=\"Edit body\"\n        id=\"edit-post-input\"\n        fullWidth\n        multiline\n        color=\"info\"\n        value={body}\n        onChange={updateBody}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <IconButton type=\"submit\">\n          <ArrowForwardTwoToneIcon />\n        </IconButton>\n      </div>\n    </form>\n  );\n};\n\nexport default EditPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js",["134","135"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js",["136","137","138"],"import { Button, IconButton, Popover, Typography } from \"@mui/material\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport { deletePost } from \"../../../store/post\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\n\nconst DeletePost = ({ postId }) => {\n  const dispatch = useDispatch();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  const closePopover = () => setPopoverOpen(false);\n  const openPopover = (e) => {\n    setPopoverOpen(true);\n    setAnchorElement(e.currentTarget);\n  };\n\n  const deleteUserPost = async () =>\n    await dispatch(deletePost({ postId })).then(() => closePopover());\n\n  return (\n    <>\n      {/* Delete icon that is located next to the edit icon on a post card  */}\n      <Delete\n        aria-describedby=\"delete-post\"\n        variant=\"contained\"\n        onClick={openPopover}\n      />\n      {/* Popover opens whenever the Delete icon above is clicked */}\n      <Popover\n        id=\"delete-post\"\n        open={popoverOpen}\n        onClose={closePopover}\n        anchorEl={anchorElement}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"5px\",\n          }}\n        >\n          <Button\n            sx={{ backgroundColor: \"red\", mr: \"10px\" }}\n            variant=\"contained\"\n            onClick={deleteUserPost}\n          >\n            Delete\n          </Button>\n          <Button variant=\"outlined\" onClick={closePopover}>\n            Cancel\n          </Button>\n        </Box>\n      </Popover>\n      {/* <Delete onClick={openPopover} /> */}\n    </>\n  );\n};\n\nexport default DeletePost;\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":23,"column":9,"nodeType":"145","messageId":"146","endLine":23,"endColumn":13},{"ruleId":"143","severity":1,"message":"147","line":12,"column":3,"nodeType":"145","messageId":"146","endLine":12,"endColumn":8},{"ruleId":"143","severity":1,"message":"148","line":13,"column":3,"nodeType":"145","messageId":"146","endLine":13,"endColumn":9},{"ruleId":"143","severity":1,"message":"149","line":22,"column":9,"nodeType":"145","messageId":"146","endLine":22,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":22,"column":6,"nodeType":"152","endLine":22,"endColumn":27,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"154","line":2,"column":37,"nodeType":"145","messageId":"146","endLine":2,"endColumn":45},{"ruleId":"143","severity":1,"message":"155","line":10,"column":3,"nodeType":"145","messageId":"146","endLine":10,"endColumn":12},{"ruleId":"143","severity":1,"message":"156","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":2,"column":3,"nodeType":"145","messageId":"146","endLine":2,"endColumn":9},{"ruleId":"143","severity":1,"message":"147","line":11,"column":3,"nodeType":"145","messageId":"146","endLine":11,"endColumn":8},{"ruleId":"143","severity":1,"message":"149","line":23,"column":9,"nodeType":"145","messageId":"146","endLine":23,"endColumn":16},{"ruleId":"143","severity":1,"message":"157","line":22,"column":10,"nodeType":"145","messageId":"146","endLine":22,"endColumn":24},{"ruleId":"143","severity":1,"message":"158","line":22,"column":26,"nodeType":"145","messageId":"146","endLine":22,"endColumn":43},{"ruleId":"143","severity":1,"message":"159","line":3,"column":3,"nodeType":"145","messageId":"146","endLine":3,"endColumn":9},{"ruleId":"143","severity":1,"message":"160","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":14},{"ruleId":"143","severity":1,"message":"161","line":12,"column":8,"nodeType":"145","messageId":"146","endLine":12,"endColumn":18},{"ruleId":"143","severity":1,"message":"162","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":23},{"ruleId":"143","severity":1,"message":"163","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":23},{"ruleId":"143","severity":1,"message":"164","line":20,"column":10,"nodeType":"145","messageId":"146","endLine":20,"endColumn":19},{"ruleId":"143","severity":1,"message":"165","line":22,"column":10,"nodeType":"145","messageId":"146","endLine":22,"endColumn":13},{"ruleId":"139","replacedBy":"166"},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","severity":1,"message":"168","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":7},{"ruleId":"143","severity":1,"message":"169","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":14},{"ruleId":"143","severity":1,"message":"170","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":12},{"ruleId":"143","severity":1,"message":"171","line":20,"column":8,"nodeType":"145","messageId":"146","endLine":20,"endColumn":20},{"ruleId":"150","severity":1,"message":"172","line":41,"column":6,"nodeType":"152","endLine":41,"endColumn":25,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":91,"column":23,"nodeType":"176","endLine":91,"endColumn":76},{"ruleId":"143","severity":1,"message":"177","line":4,"column":3,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"178","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"179","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":21},{"ruleId":"143","severity":1,"message":"180","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":21},{"ruleId":"143","severity":1,"message":"171","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":20},{"ruleId":"143","severity":1,"message":"181","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"143","severity":1,"message":"182","line":22,"column":9,"nodeType":"145","messageId":"146","endLine":22,"endColumn":28},{"ruleId":"143","severity":1,"message":"181","line":1,"column":18,"nodeType":"145","messageId":"146","endLine":1,"endColumn":28},{"ruleId":"143","severity":1,"message":"183","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":49},{"ruleId":"143","severity":1,"message":"184","line":4,"column":23,"nodeType":"145","messageId":"146","endLine":4,"endColumn":34},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Avatar' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'Redirect' is defined but never used.","'TextField' is defined but never used.","'SearchIcon' is defined but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'DeleteIcon' is defined but never used.","'SmartButtonIcon' is defined but never used.","'HeartButtonIcon' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.",["185"],["186"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Notification' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SpeedDialAction' is defined but never used.","'SpeedDialIcon' is defined but never used.","'useDispatch' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'updateSelectedImage' is assigned a value but never used.","'Typography' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser.id]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"195","text":"196"},[694,715],"[dispatch, loadLimit, sessionUser.id]",[1165,1184],"[dispatch, profileDrawerOpen, userId]"]