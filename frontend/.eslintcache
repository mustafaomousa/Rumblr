[{"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/index.js":"1","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/App.js":"2","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/index.js":"3","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/csrf.js":"4","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/session.js":"5","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/LoginFormPage/index.js":"6","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SignupFormPage/index.js":"7","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/post.js":"9","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/FeedPage/index.js":"10","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/CreatePost/index.js":"11","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/vehicle.js":"12","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/ProfilePage/index.js":"13","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/PostCard/index.js":"14","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/like.js":"15","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePage/index.js":"16","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePostCard/index.js":"17","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SearchResultsPage/index.js":"18","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SinglePost/index.js":"19","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/TagPage/index.js":"20"},{"size":895,"mtime":1611512341364,"results":"21","hashOfConfig":"22"},{"size":1677,"mtime":1611786545911,"results":"23","hashOfConfig":"22"},{"size":855,"mtime":1611534641819,"results":"24","hashOfConfig":"22"},{"size":787,"mtime":1611343399088,"results":"25","hashOfConfig":"22"},{"size":2405,"mtime":1611609920973,"results":"26","hashOfConfig":"22"},{"size":1930,"mtime":1611679870630,"results":"27","hashOfConfig":"22"},{"size":3405,"mtime":1611680089027,"results":"28","hashOfConfig":"22"},{"size":2168,"mtime":1611693314971,"results":"29","hashOfConfig":"22"},{"size":1245,"mtime":1611695625155,"results":"30","hashOfConfig":"22"},{"size":942,"mtime":1611607156534,"results":"31","hashOfConfig":"22"},{"size":3637,"mtime":1611695609099,"results":"32","hashOfConfig":"22"},{"size":774,"mtime":1611524252464,"results":"33","hashOfConfig":"22"},{"size":2417,"mtime":1611771874074,"results":"34","hashOfConfig":"22"},{"size":3605,"mtime":1611787009766,"results":"35","hashOfConfig":"22"},{"size":1465,"mtime":1611594901082,"results":"36","hashOfConfig":"22"},{"size":1595,"mtime":1611680150464,"results":"37","hashOfConfig":"22"},{"size":761,"mtime":1611594787064,"results":"38","hashOfConfig":"22"},{"size":1320,"mtime":1611782271947,"results":"39","hashOfConfig":"22"},{"size":2887,"mtime":1611710875448,"results":"40","hashOfConfig":"22"},{"size":945,"mtime":1611787789821,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"mdejc3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/index.js",[],["88","89"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/App.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/csrf.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/session.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/LoginFormPage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SignupFormPage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/post.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/FeedPage/index.js",["90","91","92"],"import { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CreatePost from '../CreatePost';\nimport PostCard from '../PostCard';\nimport ProfilePage from '../ProfilePage';\nimport './feed.css';\n\nconst FeedPage = () => {\n    const sessionUser = useSelector(state => state.session.user);\n    const allPosts = useSelector(state => state.posts.allPosts);\n    const makes = useSelector(state => state.vehicles.makes);\n    const models = useSelector(state => state.vehicles.models)\n\n    if (!sessionUser) return (\n        <Redirect to='/' />\n    );\n\n    return (\n        <div className='feed-body'>\n            <h1>Feed</h1>\n            <CreatePost user={sessionUser} makes={makes} models={models} />\n            {allPosts && allPosts.map((post, idx) => {\n                return <PostCard post={post} user={sessionUser} key={idx} />\n            })}\n        </div >\n    )\n\n};\n\nexport default FeedPage;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/CreatePost/index.js",["93"],"import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createNewPost } from '../../store/post'\n\nimport './new-post.css';\n\nconst CreatePost = ({ user, makes, models }) => {\n    const dispatch = useDispatch();\n\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [body, setBody] = useState('');\n    const [makeId, setMakeId] = useState(0);\n    const [modelId, setModelId] = useState(0);\n\n    const updateTitle = (e) => setTitle(e.target.value);\n    const updateContent = (e) => setContent(e.target.value);\n    const updateBody = (e) => setBody(e.target.value);\n    const updateMake = (e) => setMakeId(e.target.value);\n    const updateModel = (e) => setModelId(e.target.value);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const tags = body.match(/#[A-Za-z0-9]*/g)\n\n        const payload = {\n            title,\n            content,\n            body,\n            tags,\n            makeId,\n            modelId,\n            userId: user.id\n        };\n        dispatch(createNewPost(payload));\n        resetFields();\n    };\n\n    const resetFields = () => {\n        setTitle('');\n        setContent('');\n        setBody('');\n        setMakeId(0);\n        setModelId(0);\n    };\n\n    return (\n        <div className='create-post'>\n            <div className='create-post-container'>\n                {/* <div className='user-info'>\n                    <a>{user.username}</a>\n                </div> */}\n                <div className='create-post-form'>\n                    <form onSubmit={onSubmit}>\n                        <div className='input-container'>\n                            <div className='post-information-container'>\n                                <input onChange={updateTitle} value={title} placeholder='title'></input>\n                                <textarea onChange={updateBody} value={body} placeholder=\"what's on your mind?\"></textarea>\n\n                            </div>\n                            <div className='upload-media-container'>\n                                <input onChange={updateContent} value={content} placeholder='image url'></input>\n                            </div>\n                            <div className='vehicle-select-container'>\n                                <select onChange={updateMake} value={makeId}>\n                                    <option value={0}>Select a Make</option>\n                                    {makes && makes.map((make, idx) => {\n                                        return (\n                                            <option value={make.id} key={idx}>{make.name}</option>\n                                        )\n                                    })}\n                                </select>\n                                <select onChange={updateModel} value={modelId}>\n                                    <option value={0}>Select a Model</option>\n                                    {models && models.map((model, idx) => {\n                                        return (\n                                            <option value={model.id} key={idx}>{model.name}</option>\n                                        )\n                                    })}\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className='post-button-container'>\n                            <button>Create Post</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default CreatePost;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/vehicle.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/ProfilePage/index.js",["94","95","96","97","98","99","100"],"import { useSelector } from 'react-redux';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport CreatePost from '../CreatePost';\nimport PostCard from '../PostCard';\nimport './profile.css';\n\nconst ProfilePage = () => {\n    const sessionUser = useSelector(state => state.session.user);\n    const allPosts = useSelector(state => state.posts.allPosts);\n    const makes = useSelector(state => state.vehicles.makes);\n    const models = useSelector(state => state.vehicles.models);\n\n\n\n    let { username } = useParams();\n\n    const profileUser = useSelector(state => state.session.allUsers.filter((user) => user.username === username))[0];\n\n    if (!sessionUser) return (\n        <Redirect to='/' />\n    );\n\n    if (username === sessionUser.username) return (\n\n        <div className='main'>\n            <div className='profile-card'>\n                <div className='profile-user-info'>\n                    <img id='profile-picture' src={profileUser.profilePicture}></img>\n                    <h1>{sessionUser.username}</h1>\n                </div>\n                <div className='bio-header'>\n                    <h4>{profileUser.header}</h4>\n                    <p>{profileUser.bio}</p>\n                </div>\n            </div>\n            <div className='profile-body'>\n\n                {/* <CreatePost user={sessionUser} makes={makes} models={models} /> */}\n                {allPosts && allPosts.map((post, idx) => {\n                    if (post.userId === sessionUser.id) return (<PostCard post={post} user={sessionUser} key={idx} />)\n                })}\n            </div>\n        </div>\n\n    )\n\n    return profileUser && (\n        <div className='main'>\n            <div className='profile-card'>\n                <div className='profile-user-info'>\n                    <img id='profile-picture' src={profileUser.profilePicture}></img>\n                    <h1>{profileUser.username}</h1>\n                </div>\n                <div className='bio-header'>\n                    <h4>{profileUser.header}</h4>\n                    <p>{profileUser.bio}</p>\n                </div>\n            </div>\n            <div className='profile-body'>\n                {allPosts && allPosts.map((post, idx) => {\n                    if (post.User.username === username) return (<PostCard post={post} user={sessionUser} key={idx} />)\n                })}\n            </div>\n        </div>\n\n    )\n};\n\nexport default ProfilePage;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/PostCard/index.js",["101","102"],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/store/like.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/WelcomePostCard/index.js",[],"/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SearchResultsPage/index.js",["103","104","105"],"import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SinglePost from \"../SinglePost\";\n\nimport './search-result.css'\n\nconst SearchResultsPage = ({ posts, searchTerm }) => {\n    const results = posts.filter((post) => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    const users = useSelector(state => state.session.allUsers);\n\n    const searchedUsers = users.filter((user) => user.username.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    return posts && (\n        <div >\n            <div>\n                <p>Posts:</p>\n            </div>\n            {results.map((post, idx) => (\n\n                <div className='search-result-each' key={idx}>\n                    <div className='divider' />\n                    <a href='/' className='single-result'>{post.title}</a>\n                </div>\n            ))}\n            <div>\n                <p>Users:</p>\n            </div>\n            {users.map((user, idx) => (\n                <div className='search-result-each' key={idx}>\n                    <div className='divider' />\n                    <a href='/' className='single-result'>{user.username}</a>\n                </div>\n            ))}\n            <div>\n                <p>Tags:</p>\n            </div>\n        </div>\n    )\n};\n\nexport default SearchResultsPage;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/SinglePost/index.js",["106"],"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import ReactPlayer from 'react-player'\n\nimport { createNewLike, deleteLike } from '../../store/like';\nimport './single-post.css'\n\nconst SinglePost = ({ post }) => {\n    const dispatch = useDispatch();\n    const [liked, setLiked] = useState(false);\n    const sessionUser = useSelector(state => state.session.user);\n    const postLikes = useSelector(state => state.likes.likes.filter(like => like.postId === post.id));\n    const userLikes = useSelector(state => state.likes.likes.filter(like => like.userId === sessionUser.id && like.postId === post.id));\n\n    let like = null;\n    if (userLikes.shift !== undefined) {\n        like = userLikes.shift()\n    };\n\n\n    const likePost = (e) => {\n        e.preventDefault();\n        setLiked(true);\n        const userId = sessionUser.id;\n        const postId = post.id;\n        const payload = { userId, postId };\n\n        dispatch(createNewLike(payload));\n    };\n\n    const removeLike = (e) => {\n        e.preventDefault();\n\n        const userId = sessionUser.id;\n        const postId = post.id;\n        const payload = { userId, postId };\n\n        dispatch(deleteLike(payload));\n        setLiked(false);\n    };\n\n    useEffect(() => {\n        if (like) setLiked(true);\n    }, [like])\n\n    return (\n        <div className={'single-post-card'}>\n            <div className='post-title-container'>\n                <div className='user-icon-container'>\n                    <img id='user-icon' src={post.User.profilePicture}></img>\n                </div>\n                <div className='user-post-link-container'>\n                    <Link to={`/${post.User.username}`}>{post.title}</Link>\n                </div>\n            </div>\n            <div className='post-media'>\n                {post.content.includes('youtube') && (\n                    <p>Video Player Here</p>\n                    // <ReactPlayer width='450px' height='250px' url={post.content} />\n                )}\n                <img src={post.content} alt='' />\n            </div>\n            <div className='post-body'>\n                <Link id='username' to={`/${post.User.username}`}>{post.User.username}:</Link>\n                <p id='title'>{post.body}</p>\n            </div>\n            <div className='user-control-panel'>\n                {liked && (\n                    <>\n                        <i onClick={removeLike} id='heart' className=\"far fa-heart selected\"></i>\n                    </>\n                )}\n                {!liked && (\n                    <>\n                        <i onClick={likePost} id='heart' className=\"far fa-heart\"></i>\n                    </>\n                )}\n                <p id='like-count'>{postLikes.length} likes</p>\n            </div>\n        </div>\n    )\n};\n\nexport default SinglePost;","/Users/mustafamousa/AppAcademyWork/react-solo-project/frontend/src/components/TagPage/index.js",["107","108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":2,"column":20,"nodeType":"117","messageId":"118","endLine":2,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":2,"column":27,"nodeType":"117","messageId":"118","endLine":2,"endColumn":33},{"ruleId":"115","severity":1,"message":"120","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":19},{"ruleId":"115","severity":1,"message":"121","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":19},{"ruleId":"115","severity":1,"message":"122","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":18},{"ruleId":"115","severity":1,"message":"123","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":16},{"ruleId":"115","severity":1,"message":"124","line":12,"column":11,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":29,"column":21,"nodeType":"127","endLine":29,"endColumn":80},{"ruleId":"128","severity":1,"message":"129","line":40,"column":55,"nodeType":"130","messageId":"131","endLine":40,"endColumn":57},{"ruleId":"125","severity":1,"message":"126","line":52,"column":21,"nodeType":"127","endLine":52,"endColumn":80},{"ruleId":"128","severity":1,"message":"129","line":61,"column":55,"nodeType":"130","messageId":"131","endLine":61,"endColumn":57},{"ruleId":"115","severity":1,"message":"132","line":10,"column":11,"nodeType":"117","messageId":"118","endLine":10,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":57,"column":21,"nodeType":"127","endLine":57,"endColumn":72},{"ruleId":"115","severity":1,"message":"121","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":19},{"ruleId":"115","severity":1,"message":"133","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":18},{"ruleId":"115","severity":1,"message":"134","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":51,"column":21,"nodeType":"127","endLine":51,"endColumn":72},{"ruleId":"115","severity":1,"message":"132","line":6,"column":11,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":9,"column":52,"nodeType":"137","messageId":"138","endLine":9,"endColumn":53,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":19,"column":25,"nodeType":"127","endLine":19,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":20,"column":25,"nodeType":"127","endLine":20,"endColumn":28},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'ProfilePage' is defined but never used.","'useEffect' is defined but never used.","'CreatePost' is defined but never used.","'makes' is assigned a value but never used.","'models' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'history' is assigned a value but never used.","'SinglePost' is defined but never used.","'searchedUsers' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["144","145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"messageId":"146","fix":"147","desc":"148"},{"messageId":"149","fix":"150","desc":"151"},"removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[233,234],"",[233,233],"\\"]