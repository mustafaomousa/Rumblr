[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/BreadcrumbNavigation/index.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/ProtectedRoute.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Footer/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/index.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/EditPost/index.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/DeletePost/index.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/index.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/index.js":"25","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateBio.js":"26","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePersonalInformation.js":"27","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateProfilePicture.js":"28","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePassword.js":"29","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ScrollToTop/index.js":"30","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/About/index.js":"31","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LargeFooter/index.js":"32","/Users/mustafamousa/Projects/Rumblr/frontend/src/index.tsx":"33","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.tsx":"34","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.tsx":"35","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/SessionUserMenu/index.tsx":"36","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/useStyles.ts":"37","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/Logo/index.tsx":"38","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/index.tsx":"39","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/useS3.ts":"40","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/useStyles.ts":"41","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/MobileMenu/index.tsx":"42","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js":"43"},{"size":741,"mtime":1642461289099,"results":"44","hashOfConfig":"45"},{"size":2517,"mtime":1642461289099,"results":"46","hashOfConfig":"45"},{"size":5577,"mtime":1642461289099,"results":"47","hashOfConfig":"45"},{"size":857,"mtime":1642461289099,"results":"48","hashOfConfig":"45"},{"size":776,"mtime":1642461289099,"results":"49","hashOfConfig":"45"},{"size":1631,"mtime":1642461289098,"results":"50","hashOfConfig":"45"},{"size":323,"mtime":1633891798486,"results":"51","hashOfConfig":"52"},{"size":991,"mtime":1642461289096,"results":"53","hashOfConfig":"45"},{"size":1169,"mtime":1642461289099,"results":"54","hashOfConfig":"45"},{"size":216,"mtime":1642461289098,"results":"55","hashOfConfig":"45"},{"size":3561,"mtime":1642461289098,"results":"56","hashOfConfig":"45"},{"size":4050,"mtime":1642461289098,"results":"57","hashOfConfig":"45"},{"size":1111,"mtime":1642461289094,"results":"58","hashOfConfig":"45"},{"size":2053,"mtime":1642461289094,"results":"59","hashOfConfig":"45"},{"size":5777,"mtime":1642461289097,"results":"60","hashOfConfig":"45"},{"size":164,"mtime":1642461289096,"results":"61","hashOfConfig":"45"},{"size":461,"mtime":1640653915498,"results":"62","hashOfConfig":"52"},{"size":1581,"mtime":1642461289094,"results":"63","hashOfConfig":"45"},{"size":372,"mtime":1642461289093,"results":"64","hashOfConfig":"45"},{"size":1321,"mtime":1642461289095,"results":"65","hashOfConfig":"45"},{"size":5766,"mtime":1642461289096,"results":"66","hashOfConfig":"45"},{"size":1795,"mtime":1642461289096,"results":"67","hashOfConfig":"45"},{"size":1696,"mtime":1642461289096,"results":"68","hashOfConfig":"45"},{"size":542,"mtime":1642461289098,"results":"69","hashOfConfig":"45"},{"size":2293,"mtime":1642461289097,"results":"70","hashOfConfig":"45"},{"size":2202,"mtime":1642461289097,"results":"71","hashOfConfig":"45"},{"size":2853,"mtime":1642461289097,"results":"72","hashOfConfig":"45"},{"size":2410,"mtime":1642461289097,"results":"73","hashOfConfig":"45"},{"size":3137,"mtime":1642461289097,"results":"74","hashOfConfig":"45"},{"size":785,"mtime":1642461289097,"results":"75","hashOfConfig":"45"},{"size":382,"mtime":1642461289094,"results":"76","hashOfConfig":"45"},{"size":3610,"mtime":1642461289095,"results":"77","hashOfConfig":"45"},{"size":1723,"mtime":1642464742015,"results":"78","hashOfConfig":"45"},{"size":2033,"mtime":1642461289093,"results":"79","hashOfConfig":"45"},{"size":1674,"mtime":1642461289096,"results":"80","hashOfConfig":"45"},{"size":2772,"mtime":1642463694494,"results":"81","hashOfConfig":"45"},{"size":480,"mtime":1642461289096,"results":"82","hashOfConfig":"45"},{"size":281,"mtime":1642461289095,"results":"83","hashOfConfig":"45"},{"size":4120,"mtime":1642461289094,"results":"84","hashOfConfig":"45"},{"size":478,"mtime":1642461289094,"results":"85","hashOfConfig":"45"},{"size":400,"mtime":1642461289094,"results":"86","hashOfConfig":"45"},{"size":3290,"mtime":1642464093172,"results":"87","hashOfConfig":"45"},{"size":4507,"mtime":1642464736291,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1votuwm",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"sdhkcj",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"91"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"165"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],["186","187"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["188","189"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js",[],["190","191"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/BreadcrumbNavigation/index.js",["192"],"import { Breadcrumbs, Container, Link } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\n\nconst BreadcrumbNavigation = () => {\n  const location = useLocation();\n  const [path, setPath] = useState(\"\");\n\n  useEffect(() => {\n    let pathArray = location.pathname.split(\"/\");\n    pathArray.shift();\n    setPath(pathArray);\n  }, [location]);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: \"55px\",\n        width: \"100%\",\n      }}\n    >\n      <Container>\n        <Breadcrumbs\n          sx={{ maxWidth: \"1200px\", padding: \"20px 20px\" }}\n          separator={<ChevronRightIcon color=\"secondary\" />}\n        >\n          <Link\n            underline={path == \"discover\" ? \"always\" : \"hover\"}\n            color=\"secondary\"\n            href=\"/discover\"\n          >\n            Discover\n          </Link>\n          {path &&\n            path.map(\n              (pathname) =>\n                pathname &&\n                pathname !== \"discover\" && (\n                  <Link\n                    underline=\"always\"\n                    color=\"secondary\"\n                    href={`/${pathname}`}\n                  >\n                    {pathname[0].toUpperCase() + pathname.slice(1)}\n                  </Link>\n                )\n            )}\n        </Breadcrumbs>\n      </Container>\n    </Box>\n  );\n};\n\nexport default BreadcrumbNavigation;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/ProtectedRoute.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Footer/index.js",["193","194"],"import { AppBar, Box, Container, IconButton, Link, Stack } from \"@mui/material\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    height: 55,\n    width: \"100%\",\n    backgroundColor: \"#333A56\",\n    borderTop: \"1px solid #405368\",\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        height=\"100%\"\n        padding=\"0 30px\"\n      >\n        <Link href=\"https://github.com/mustafaomousa\">\n          <IconButton>\n            <GitHubIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n        <Link href=\"https://www.linkedin.com/in/mustafa-mousa-8b8053157/\">\n          <IconButton>\n            <LinkedInIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n        <Link href=\"mailto:contact@mustafamousa.com\">\n          <IconButton>\n            <EmailIcon color=\"secondary\" />\n          </IconButton>\n        </Link>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Footer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/index.js",["195","196","197"],"import {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Collapse,\n  Grow,\n  Link,\n  Slide,\n  Stack,\n  Typography,\n  Zoom,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CancelTwoToneIcon from \"@mui/icons-material/CancelTwoTone\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport DeletePost from \"./DeletePost\";\nimport moment from \"moment\";\nimport EditPost from \"./EditPost\";\nimport Notification from \"../Notification\";\nimport { makeStyles } from \"@mui/styles\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { Box } from \"@mui/system\";\nimport { likeUserPost, removeLike } from \"../../store/post\";\nimport useNotification from \"../Notification/useNotification\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    borderRadius: 0,\n    // width: 500,\n    background: \"rgba(0,0,0,0)\",\n  },\n  cardHeader: {},\n}));\n\nconst Post = ({ post }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [editOpen, setEditOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const closeEditOpen = () => setEditOpen(false);\n  const openEditOpen = () => setEditOpen(true);\n\n  const notificationRef = useNotification();\n\n  const like = async (postUser) => {\n    setIsLoading(true);\n    await dispatch(likeUserPost(post.id, sessionUser.id)).then(() => {\n      setIsLoading(false);\n    });\n    notificationRef.current.toggleNotification({\n      message: `You liked ${postUser}'s post!`,\n      severity: \"success\",\n    });\n  };\n\n  const dislike = async (like) => {\n    setIsLoading(true);\n    await dispatch(removeLike(like)).then(() => setIsLoading(false));\n  };\n\n  return (\n    <Grow in={post ? true : false}>\n      <Card className={classes.root} elevation={0}>\n        <Notification ref={notificationRef} />\n        <CardHeader\n          sx={{\n            backgroundColor: \"#ffffff\",\n          }}\n          avatar={\n            window.location.pathname !== \"/discover\" && (\n              <Link href={`/users/${post.User.id}`}>\n                <Avatar\n                  variant=\"square\"\n                  src={post.User.profilePicture}\n                  sx={{\n                    height: 40,\n                    width: 40,\n                    backgroundColor: post.User.profilePicture && \"#BDBDBD\",\n                  }}\n                />\n              </Link>\n            )\n          }\n          className={classes.cardHeader}\n          action={\n            sessionUser.id === post.User.id && (\n              <Stack\n                direction=\"row\"\n                align\n                justifyContent={\"center\"}\n                spacing={1}\n              >\n                <Button aria-describedby=\"delete-post\" color=\"primary\">\n                  <DeletePost postId={post.id} />\n                </Button>\n                {editOpen ? (\n                  <Button onClick={closeEditOpen} color=\"secondary\">\n                    <CancelTwoToneIcon color=\"warning\" />\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"outlined\"\n                    onClick={openEditOpen}\n                    color=\"primary\"\n                  >\n                    <EditIcon />\n                  </Button>\n                )}\n              </Stack>\n            )\n          }\n          title={\n            <Link\n              underline=\"hover\"\n              href={`/users/${post.User.id}`}\n              fontSize=\"medium\"\n            >\n              {post.User.username}\n            </Link>\n          }\n        />\n        <CardMedia\n          component=\"img\"\n          image={post.content}\n          sx={{ backgroundColor: \"#ffffff\", width: \"101%\" }}\n        />\n        <CardContent sx={{ backgroundColor: \"#ffffff\" }}>\n          {editOpen ? (\n            <EditPost\n              notificationRef={notificationRef}\n              post={post}\n              closeEditOpen={closeEditOpen}\n            />\n          ) : (\n            <Box>\n              <Typography\n                variant=\"body1\"\n                sx={{ wordWrap: \"break-word\" }}\n                paragraph\n                color=\"primary\"\n                id={`postInput-${post.User.username}`}\n              >\n                {post.body}\n              </Typography>\n            </Box>\n          )}\n        </CardContent>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-end\"\n          padding={1}\n          sx={{\n            backgroundColor: \"#ffffff\",\n          }}\n        >\n          <Stack direction=\"row\" spacing={1}>\n            <Button\n              color=\"warning\"\n              variant={post.Liked ? \"contained\" : \"outlined\"}\n              size=\"small\"\n              onClick={\n                post.Liked\n                  ? () => dislike(post.Likes[0])\n                  : () => like(post.User.username)\n              }\n              sx={{ display: \"flex\", justifyContent: \"space-around\" }}\n              disabled={isLoading}\n            >\n              {!isLoading ? (\n                <>\n                  {post.Liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                  {post.Likes && post.Likes.length > 0 && post.Likes.length}\n                </>\n              ) : (\n                <CircularProgress size={20} />\n              )}\n            </Button>\n          </Stack>\n          <Typography color=\"primary\" variant=\"caption\">\n            {moment(post.createdAt).format(\"MMMM DD, YYYY\")}\n          </Typography>\n        </Stack>\n      </Card>\n    </Grow>\n  );\n};\n\nexport default Post;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/EditPost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Post/DeletePost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/index.js",["198"],"import BreadcrumbNavigation from \"./BreadcrumbNavigation\";\nimport Navigation from \"./Navigation\";\nimport Footer from \"./Footer\";\nimport WelcomePage from \"./WelcomePage\";\nimport About from \"./About\";\nimport Discover from \"./Discover\";\nimport Settings from \"./Settings\";\nimport Profile from \"./Profile\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport LargeFooter from \"./LargeFooter\";\n\nexport default {\n  BreadcrumbNavigation,\n  Navigation,\n  Footer,\n  WelcomePage,\n  About,\n  Discover,\n  Settings,\n  Profile,\n  ScrollToTop,\n  LargeFooter,\n};\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateBio.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePersonalInformation.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdateProfilePicture.js",["199"],"import { Avatar, Button, Input, Stack, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport S3FileUpload from \"react-s3/lib/ReactS3\";\nimport { updateProfilePicture } from \"../../store/session\";\n\nconst useStyles = makeStyles((theme) => ({\n  userAvatar: {\n    width: \"100%\",\n  },\n  userAvatarBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst UpdateProfilePicture = ({ sessionUser }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: sessionUser.username.profile_picture,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const updateProfilePic = async (e) => {\n    e.preventDefault();\n\n    await S3FileUpload.uploadFile(e.target.files[0], config).then((data) => {\n      dispatch(updateProfilePicture(sessionUser.id, data.location));\n    });\n  };\n\n  const deleteProfilePic = async (e) => {\n    e.preventDefault();\n    await dispatch(updateProfilePicture(sessionUser.id, null));\n  };\n\n  return (\n    <Box>\n      <Box className={classes.userAvatarBox}>\n        <Avatar\n          variant=\"square\"\n          className={classes.userAvatar}\n          sx={{ width: \"100%\", height: \"auto\" }}\n          src={sessionUser.profilePicture}\n        />\n      </Box>\n      <Stack\n        spacing={1}\n        direction=\"row\"\n        marginTop={\"10px\"}\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n        height=\"100%\"\n      >\n        <Input\n          type=\"file\"\n          id=\"profile-image\"\n          sx={{ display: \"none\" }}\n          onChange={updateProfilePic}\n        />\n        <label htmlFor=\"profile-image\">\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            disableElevation\n            size=\"small\"\n            component=\"span\"\n            fullWidth\n          >\n            Upload Image\n          </Button>\n        </label>\n        <Button\n          disableElevation\n          color=\"warning\"\n          size=\"small\"\n          variant=\"contained\"\n          onClick={deleteProfilePic}\n          disabled={!sessionUser.profilePicture}\n        >\n          Delete\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default UpdateProfilePicture;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Settings/UpdatePassword.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ScrollToTop/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/About/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LargeFooter/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.tsx",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.tsx",[],["200","201"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.tsx",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/SessionUserMenu/index.tsx",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/useStyles.ts",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/Logo/index.tsx",["202"],"import { Link, Typography } from \"@mui/material\";\n\nexport default () => {\n  return (\n    <>\n      <Link href=\"/discover\" color=\"secondary\" underline=\"none\">\n        <Typography fontWeight=\"bold\" fontSize=\"25px\">\n          Rumblr\n        </Typography>\n      </Link>\n    </>\n  );\n};\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/index.tsx",["203"],"import React from \"react\";\nimport {\n  Button,\n  Input,\n  CardMedia,\n  Typography,\n  TextField,\n  Stack,\n  Modal,\n} from \"@mui/material\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\n\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ImageIcon from \"@mui/icons-material/Image\";\n\nimport { useAppDispatch } from \"../..\";\nimport useS3 from \"./useS3\";\nimport { createNewPost } from \"../../store/post\";\nimport useStyles from \"./useStyles\";\n\ntype CreatePostProps = {\n  sessionUser: {\n    id: number;\n    username: string;\n  };\n};\n\nconst CreatePost = ({ sessionUser }: CreatePostProps) => {\n  const s3 = useS3();\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const [body, setBody] = React.useState<String>(\"\");\n  const [selectedImage, setSelectedImage] = React.useState<any>(null);\n  const [createPostVisible, setCreatePostVisible] = React.useState(false);\n\n  const openCreatePost = () => setCreatePostVisible(true);\n  const closeCreatePost = () => setCreatePostVisible(false);\n\n  const updateSelectedImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input: HTMLInputElement = event.currentTarget;\n    input.files && setSelectedImage(input.files[0]);\n  };\n\n  const updateBody = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input: HTMLInputElement = event.currentTarget;\n    setBody(input.value);\n  };\n\n  const onSubmit = async (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    await s3\n      .uploadFile(selectedImage)\n      .then((data) => {\n        dispatch(\n          createNewPost({\n            content: data.location,\n            body,\n            tags,\n            userId: sessionUser.id,\n          })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <Button\n        size=\"small\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={openCreatePost}\n        endIcon={<AddCircleOutlineIcon />}\n      >\n        Post\n      </Button>\n      <Modal\n        className={classes.createPostModal}\n        open={createPostVisible}\n        onClose={closeCreatePost}\n      >\n        <form className={classes.createPostForm} onSubmit={onSubmit}>\n          <Stack spacing={2}>\n            {selectedImage && (\n              <CardMedia\n                component=\"img\"\n                image={URL.createObjectURL(selectedImage)}\n              />\n            )}\n            <label>\n              <Input\n                className={classes.imageInput}\n                onChange={updateSelectedImage}\n                type=\"file\"\n                name=\"image\"\n              />\n              {!selectedImage && (\n                <Button\n                  className={classes.imageButton}\n                  fullWidth\n                  component=\"span\"\n                >\n                  <ImageIcon color=\"primary\" />\n                </Button>\n              )}\n            </label>\n            <TextField\n              color=\"secondary\"\n              multiline\n              onChange={updateBody}\n              value={body}\n              label=\"Body\"\n              name=\"body\"\n              fullWidth\n            />\n            <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"warning\"\n                onClick={\n                  selectedImage ? () => setSelectedImage(null) : closeCreatePost\n                }\n              >\n                {selectedImage ? \"Clear\" : \"Cancel\"}\n              </Button>\n              <Button\n                id=\"submitCreatePost\"\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                endIcon={<SendIcon />}\n              >\n                Post\n              </Button>\n            </Stack>\n          </Stack>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/useS3.ts",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePostModal/useStyles.ts",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/MobileMenu/index.tsx",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js",["204","205","206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"207","replacedBy":"211"},{"ruleId":"209","replacedBy":"212"},{"ruleId":"207","replacedBy":"213"},{"ruleId":"209","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":33,"column":29,"nodeType":"217","messageId":"218","endLine":33,"endColumn":31},{"ruleId":"219","severity":1,"message":"220","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":16},{"ruleId":"219","severity":1,"message":"223","line":1,"column":23,"nodeType":"221","messageId":"222","endLine":1,"endColumn":32},{"ruleId":"219","severity":1,"message":"224","line":9,"column":3,"nodeType":"221","messageId":"222","endLine":9,"endColumn":11},{"ruleId":"219","severity":1,"message":"225","line":12,"column":3,"nodeType":"221","messageId":"222","endLine":12,"endColumn":8},{"ruleId":"219","severity":1,"message":"226","line":15,"column":3,"nodeType":"221","messageId":"222","endLine":15,"endColumn":7},{"ruleId":"227","severity":1,"message":"228","line":12,"column":1,"nodeType":"229","endLine":23,"endColumn":3},{"ruleId":"219","severity":1,"message":"230","line":1,"column":40,"nodeType":"221","messageId":"222","endLine":1,"endColumn":50},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"227","severity":1,"message":"231","line":3,"column":1,"nodeType":"229","endLine":13,"endColumn":3},{"ruleId":"232","severity":1,"message":"230","line":6,"column":3,"nodeType":"221","messageId":"222","endLine":6,"endColumn":13},{"ruleId":"219","severity":1,"message":"233","line":12,"column":3,"nodeType":"221","messageId":"222","endLine":12,"endColumn":19},{"ruleId":"219","severity":1,"message":"234","line":13,"column":3,"nodeType":"221","messageId":"222","endLine":13,"endColumn":10},{"ruleId":"219","severity":1,"message":"235","line":76,"column":10,"nodeType":"221","messageId":"222","endLine":76,"endColumn":26},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],["236"],["237"],["236"],["237"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Collapse' is defined but never used.","'Slide' is defined but never used.","'Zoom' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Typography' is defined but never used.","Assign arrow function to a variable before exporting as module default","@typescript-eslint/no-unused-vars","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'morePostsLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]