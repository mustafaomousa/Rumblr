[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/CheckoutPost.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/NewestMembers.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginFormPage/index.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupFormPage/index.js":"25"},{"size":1042,"mtime":1633891798490,"results":"26","hashOfConfig":"27"},{"size":1470,"mtime":1634678877712,"results":"28","hashOfConfig":"27"},{"size":787,"mtime":1633891798490,"results":"29","hashOfConfig":"27"},{"size":2290,"mtime":1634334819756,"results":"30","hashOfConfig":"27"},{"size":2558,"mtime":1634168567949,"results":"31","hashOfConfig":"27"},{"size":857,"mtime":1634582668536,"results":"32","hashOfConfig":"27"},{"size":625,"mtime":1634334714253,"results":"33","hashOfConfig":"27"},{"size":1438,"mtime":1634677955920,"results":"34","hashOfConfig":"27"},{"size":5533,"mtime":1634680687999,"results":"35","hashOfConfig":"27"},{"size":700,"mtime":1634678317285,"results":"36","hashOfConfig":"27"},{"size":1396,"mtime":1634585569237,"results":"37","hashOfConfig":"27"},{"size":2799,"mtime":1634332987429,"results":"38","hashOfConfig":"27"},{"size":2701,"mtime":1634679175966,"results":"39","hashOfConfig":"27"},{"size":323,"mtime":1633891798486,"results":"40","hashOfConfig":"27"},{"size":2975,"mtime":1634583934118,"results":"41","hashOfConfig":"27"},{"size":1746,"mtime":1634419216242,"results":"42","hashOfConfig":"27"},{"size":1370,"mtime":1634169869005,"results":"43","hashOfConfig":"27"},{"size":333,"mtime":1634169802572,"results":"44","hashOfConfig":"27"},{"size":3864,"mtime":1634584444218,"results":"45","hashOfConfig":"27"},{"size":1538,"mtime":1634679211704,"results":"46","hashOfConfig":"27"},{"size":1169,"mtime":1634584841431,"results":"47","hashOfConfig":"27"},{"size":1088,"mtime":1634677869269,"results":"48","hashOfConfig":"27"},{"size":1352,"mtime":1634678107597,"results":"49","hashOfConfig":"27"},{"size":2921,"mtime":1634679015695,"results":"50","hashOfConfig":"27"},{"size":3240,"mtime":1634679114016,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"sdhkcj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["112","113"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js",["114"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Stack } from \"@mui/material\";\n\nimport PostCard from \"../PostCard\";\nimport { getPosts } from \"../../store/post\";\nimport CheckoutPost from \"./CheckoutPost\";\nimport NewestMembers from \"./NewestMembers\";\n\nimport \"./index.css\";\n\nconst FeedPage = () => {\n  const dispatch = useDispatch();\n  const [loadLimit, setLoadLimit] = useState(5);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  const posts = useSelector((state) => state.posts);\n\n  const increaseLimit = () => setLoadLimit(loadLimit + 5);\n\n  useEffect(\n    () => dispatch(getPosts(loadLimit, sessionUser.id)),\n    [dispatch, loadLimit]\n  );\n\n  if (!sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    posts && (\n      <div className=\"discover-page\">\n        <Stack spacing={2} className=\"discover-page-posts\">\n          {Object.keys(posts).map((idx) => {\n            return <PostCard post={posts[idx]} />;\n          })}\n          {Object.keys(posts).length % 5 === 0 && (\n            <Button variant=\"outlined\" onClick={increaseLimit}>\n              Load more\n            </Button>\n          )}\n        </Stack>\n        <Stack spacing={10} className=\"discover-page-side\">\n          <NewestMembers />\n          <CheckoutPost />\n        </Stack>\n      </div>\n    )\n  );\n};\n\nexport default FeedPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",["115","116","117","118","119"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["120","121"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Card,\n  Button,\n  TextField,\n  CardContent,\n  CardActions,\n  IconButton,\n  Input,\n  CardMedia,\n} from \"@mui/material\";\nimport { createNewPost } from \"../../store/post\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nimport S3FileUpload from \"react-s3\";\n\nconst CreatePost = ({ user, setCreatePostVisible, alertCreatePostSuccess }) => {\n  const dispatch = useDispatch();\n\n  const [body, setBody] = useState(\"\");\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n  const updateBody = (e) => setBody(e.target.value);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: user.username,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    S3FileUpload.uploadFile(selectedImage, config)\n      .then((data) => {\n        dispatch(\n          createNewPost({ content: data.location, body, tags, userId: user.id })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n          alertCreatePostSuccess();\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Card className=\"CreatePost\" sx={{ width: \"500px\", marginBottom: \"20px\" }}>\n      <form>\n        <CardContent>\n          {selectedImage && (\n            <CardMedia\n              component=\"img\"\n              image={URL.createObjectURL(selectedImage)}\n            />\n          )}\n          <label>\n            <Input\n              accept=\"image/*\"\n              onChange={updateSelectedImage}\n              style={{ display: \"none\" }}\n              type=\"file\"\n            />\n            {!selectedImage && (\n              <Button\n                sx={{\n                  width: \"100%\",\n                  minHeight: \"200px\",\n                  border: \"1px slategray dotted\",\n                }}\n                component=\"span\"\n              >\n                Upload\n              </Button>\n            )}\n          </label>\n          <TextField\n            size=\"small\"\n            onChange={updateBody}\n            value={body}\n            label=\"Body\"\n            multiline\n            sx={{ width: \"100%\", marginTop: \"10px\" }}\n          />\n        </CardContent>\n        <CardActions sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton>\n            <SendIcon onClick={onSubmit} />\n          </IconButton>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["122","123"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["124","125"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Container,\n  Drawer,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\n\nfunction srcset(image, size, rows = 1, cols = 1) {\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${\n      size * rows\n    }&fit=crop&auto=format&dpr=2 2x`,\n  };\n}\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value={0} sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value={1} sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value={0}>\n              <ImageList variant=\"quilted\" cols={2}>\n                {posts &&\n                  posts.map((post) => (\n                    <ImageListItem key={post.id}>\n                      <img {...srcset(post.content, 121)} loading=\"lazy\" />\n                    </ImageListItem>\n                  ))}\n              </ImageList>\n              <Stack spacing={5}></Stack>\n            </TabPanel>\n            <TabPanel value={1}>hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",["126","127","128"],"import {\n  Modal,\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n} from \"@mui/material\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport CreatePost from \"../CreatePost\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"../Notification\";\n\nconst QuickAction = () => {\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const closeAlertCreatePostSuccess = () => setSuccessNotificationOpen(false);\n  const alertCreatePostSuccess = () => setSuccessNotificationOpen(true);\n\n  if (sessionUser)\n    return (\n      <Box>\n        <Notification\n          open={successNotificationOpen}\n          handleClose={closeAlertCreatePostSuccess}\n          message={\"Post created\"}\n        />\n        <Modal\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          open={createPostVisible}\n          onClose={() => setCreatePostVisible(false)}\n          children={\n            <CreatePost\n              user={sessionUser}\n              setCreatePostVisible={setCreatePostVisible}\n              alertCreatePostSuccess={alertCreatePostSuccess}\n            />\n          }\n        />\n        <SpeedDial\n          ariaLabel=\"Hello\"\n          sx={{\n            position: \"fixed\",\n            bottom: 30,\n            right: 30,\n          }}\n          icon={<CreateIcon />}\n          onClick={() => setCreatePostVisible(true)}\n        />\n      </Box>\n    );\n\n  return null;\n};\n\nexport default QuickAction;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js",["129","130"],"import { FormControl, IconButton, TextField } from \"@mui/material\";\nimport ArrowForwardTwoToneIcon from \"@mui/icons-material/ArrowForwardTwoTone\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePost } from \"../../store/post\";\nimport Notification from \"../Notification\";\n\nconst EditPost = ({ post, closeEditOpen, alertUpdateBodySuccess }) => {\n  const dispatch = useDispatch();\n  const [body, setBody] = useState(post.body);\n\n  const updateBody = (e) => setBody(e.target.value);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dispatch(updatePost({ postId: post.id, body }))\n      .then(() => alertUpdateBodySuccess())\n      .then(() => closeEditOpen())\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <form\n      style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n      className=\"EditPost\"\n      onSubmit={onSubmit}\n    >\n      <TextField\n        placeholder=\"Edit body\"\n        id=\"edit-post-input\"\n        fullWidth\n        multiline\n        color=\"info\"\n        value={body}\n        onChange={updateBody}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <IconButton type=\"submit\">\n          <ArrowForwardTwoToneIcon />\n        </IconButton>\n      </div>\n    </form>\n  );\n};\n\nexport default EditPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js",["131","132"],"import {\n  Avatar,\n  Button,\n  Container,\n  IconButton,\n  Input,\n  InputLabel,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport S3FileUpload from \"react-s3\";\nimport { restoreUser, updateProfilePicture } from \"../../store/session\";\nimport \"./index.css\";\n\nconst SettingsPage = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: sessionUser.username.profile_picture,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const updateProfilePic = async (e) => {\n    e.preventDefault();\n\n    await S3FileUpload.uploadFile(e.target.files[0], config)\n      .then((data) => {\n        dispatch(updateProfilePicture(sessionUser.id, data.location));\n      })\n      .then(() => restoreUser());\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <Typography paddingBottom=\"100px\" color=\"white\" variant=\"h6\">\n        Settings\n      </Typography>\n      <Container\n        sx={{\n          width: \"750px\",\n          padding: \"20px\",\n          // backgroundColor: \"whitesmoke \",\n          borderRadius: \"0.1em\",\n        }}\n      >\n        <form style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"100%\",\n              paddingBottom: \"50px\",\n            }}\n          >\n            <Avatar\n              src={sessionUser.profilePicture}\n              sx={{ width: \"180px\", height: \"180px\", marginBottom: \"20px\" }}\n            />\n            <div\n              style={{\n                height: \"50%\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <label>\n                <Input\n                  onChange={updateProfilePic}\n                  style={{ display: \"none\" }}\n                  accept=\"image/*\"\n                  type=\"file\"\n                  value={selectedImage}\n                />\n                <Button component=\"span\">Upload</Button>\n              </label>\n              <Button sx={{ color: \"red\" }}>Delete</Button>\n            </div>\n          </Box>\n\n          <Stack spacing={4}>\n            <Box>\n              <InputLabel sx={{ fontSize: \"20px\" }}>Username</InputLabel>\n              <Input\n                sx={{ borderBottom: \"1px solid white\" }}\n                value={sessionUser.username}\n              />\n            </Box>\n            <Box>\n              <InputLabel sx={{ fontSize: \"20px\" }}>Email</InputLabel>\n              <Input\n                sx={{ borderBottom: \"1px solid white\" }}\n                value={sessionUser.email}\n              />\n            </Box>\n            <Box>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                sx={{ mb: \"10px\" }}\n              >\n                Update\n              </Button>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                sx={{ mb: \"10px\" }}\n              >\n                Change Password\n              </Button>\n              <Button variant=\"outlined\" size=\"small\" fullWidth>\n                Delete Account\n              </Button>\n            </Box>\n          </Stack>\n        </form>\n      </Container>\n    </div>\n  );\n};\n\nexport default SettingsPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js",["133","134"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/CheckoutPost.js",["135"],"import {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getRandomPost } from \"../../store/discover\";\n\nconst CheckoutPost = () => {\n  const dispatch = useDispatch();\n\n  const randomPost = useSelector((state) => state.discover.randomPost);\n\n  useEffect(() => {\n    dispatch(getRandomPost());\n  }, []);\n\n  if (randomPost)\n    return (\n      <div>\n        <Card\n          className=\"discover-page-side-post\"\n          variant=\"outlined\"\n          sx={{ borderRadius: \"0.1em\" }}\n        >\n          <CardHeader\n            align=\"center\"\n            title={\n              <Typography>\n                Check out this post by {randomPost.User.username}\n              </Typography>\n            }\n          />\n          <CardMedia component=\"img\" src={randomPost.content} />\n          <CardContent>{randomPost.body}</CardContent>\n        </Card>\n      </div>\n    );\n  else return <CircularProgress />;\n};\n\nexport default CheckoutPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/NewestMembers.js",["136"],"import {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Divider,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getNewestUsers } from \"../../store/discover\";\n\nimport \"./index.css\";\n\nconst NewestMembers = () => {\n  const dispatch = useDispatch();\n\n  const newestUsers = useSelector((state) => state.discover.newestUsers);\n\n  useEffect(() => dispatch(getNewestUsers()), []);\n\n  if (newestUsers)\n    return (\n      <div>\n        <Card\n          className=\"discover-page-side-newest-members\"\n          variant=\"outlined\"\n          sx={{ borderRadius: \"0.1em\" }}\n        >\n          <CardHeader\n            align=\"center\"\n            title={<Typography>Our newest members</Typography>}\n          />\n          <CardContent>\n            {newestUsers &&\n              newestUsers.map((newestUser) => {\n                return (\n                  <Button id=\"newest-user-button\">\n                    <Avatar src={newestUser.profilePicture} />\n                    <Typography>{newestUser.username}</Typography>\n                    <Divider />\n                  </Button>\n                );\n              })}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  else return <CircularProgress />;\n};\n\nexport default NewestMembers;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginFormPage/index.js",["137"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupFormPage/index.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":24,"column":5,"nodeType":"145","endLine":24,"endColumn":26,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":2,"column":37,"nodeType":"149","messageId":"150","endLine":2,"endColumn":45},{"ruleId":"147","severity":1,"message":"152","line":5,"column":3,"nodeType":"149","messageId":"150","endLine":5,"endColumn":9},{"ruleId":"147","severity":1,"message":"153","line":6,"column":3,"nodeType":"149","messageId":"150","endLine":6,"endColumn":7},{"ruleId":"147","severity":1,"message":"154","line":7,"column":3,"nodeType":"149","messageId":"150","endLine":7,"endColumn":10},{"ruleId":"147","severity":1,"message":"155","line":22,"column":10,"nodeType":"149","messageId":"150","endLine":22,"endColumn":24},{"ruleId":"147","severity":1,"message":"156","line":22,"column":26,"nodeType":"149","messageId":"150","endLine":22,"endColumn":43},{"ruleId":"139","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},{"ruleId":"143","severity":1,"message":"159","line":38,"column":6,"nodeType":"145","endLine":38,"endColumn":25,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":88,"column":23,"nodeType":"163","endLine":88,"endColumn":76},{"ruleId":"147","severity":1,"message":"164","line":4,"column":3,"nodeType":"149","messageId":"150","endLine":4,"endColumn":18},{"ruleId":"147","severity":1,"message":"165","line":5,"column":3,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},{"ruleId":"147","severity":1,"message":"166","line":11,"column":10,"nodeType":"149","messageId":"150","endLine":11,"endColumn":21},{"ruleId":"147","severity":1,"message":"167","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":21},{"ruleId":"147","severity":1,"message":"168","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":20},{"ruleId":"147","severity":1,"message":"169","line":5,"column":3,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"147","severity":1,"message":"170","line":22,"column":9,"nodeType":"149","messageId":"150","endLine":22,"endColumn":28},{"ruleId":"147","severity":1,"message":"169","line":1,"column":18,"nodeType":"149","messageId":"150","endLine":1,"endColumn":28},{"ruleId":"147","severity":1,"message":"171","line":1,"column":39,"nodeType":"149","messageId":"150","endLine":1,"endColumn":49},{"ruleId":"143","severity":1,"message":"172","line":21,"column":6,"nodeType":"145","endLine":21,"endColumn":8,"suggestions":"173"},{"ruleId":"143","severity":1,"message":"172","line":23,"column":47,"nodeType":"145","endLine":23,"endColumn":49,"suggestions":"174"},{"ruleId":"147","severity":1,"message":"175","line":3,"column":20,"nodeType":"149","messageId":"150","endLine":3,"endColumn":30},{"ruleId":"147","severity":1,"message":"175","line":14,"column":20,"nodeType":"149","messageId":"150","endLine":14,"endColumn":30},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'AppBar' is defined but never used.","'Grid' is defined but never used.","'Toolbar' is defined but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.",["176"],["177"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["179"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SpeedDialAction' is defined but never used.","'SpeedDialIcon' is defined but never used.","'useDispatch' is defined but never used.","'FormControl' is defined but never used.","'Notification' is defined but never used.","'IconButton' is defined but never used.","'updateSelectedImage' is assigned a value but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["180"],["181"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser.id]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"191","text":"192"},"Update the dependencies array to be: [dispatch]",{"range":"193","text":"194"},{"range":"195","text":"194"},[750,771],"[dispatch, loadLimit, sessionUser.id]",[1086,1105],"[dispatch, profileDrawerOpen, userId]",[457,459],"[dispatch]",[492,494]]