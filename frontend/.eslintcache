[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/EditPost/index.js":"25","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUs/index.js":"26","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js":"27","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateBio.js":"28","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePersonalInformation.js":"29","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePassword.js":"30","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateProfilePicture.js":"31","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js":"32","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js":"33"},{"size":1392,"mtime":1639777252485,"results":"34","hashOfConfig":"35"},{"size":2586,"mtime":1640554965916,"results":"36","hashOfConfig":"35"},{"size":741,"mtime":1640622846248,"results":"37","hashOfConfig":"35"},{"size":2517,"mtime":1640619886868,"results":"38","hashOfConfig":"35"},{"size":5594,"mtime":1640655186889,"results":"39","hashOfConfig":"35"},{"size":857,"mtime":1634582668536,"results":"40","hashOfConfig":"35"},{"size":776,"mtime":1640190454381,"results":"41","hashOfConfig":"35"},{"size":6202,"mtime":1640649331474,"results":"42","hashOfConfig":"35"},{"size":1584,"mtime":1640369690305,"results":"43","hashOfConfig":"35"},{"size":3731,"mtime":1640368686137,"results":"44","hashOfConfig":"35"},{"size":5503,"mtime":1640651189713,"results":"45","hashOfConfig":"35"},{"size":323,"mtime":1633891798486,"results":"46","hashOfConfig":"35"},{"size":3043,"mtime":1634681033861,"results":"47","hashOfConfig":"35"},{"size":1469,"mtime":1639778838596,"results":"48","hashOfConfig":"35"},{"size":904,"mtime":1640555412798,"results":"49","hashOfConfig":"35"},{"size":2999,"mtime":1640651407503,"results":"50","hashOfConfig":"35"},{"size":1766,"mtime":1640623425449,"results":"51","hashOfConfig":"35"},{"size":1169,"mtime":1634584841431,"results":"52","hashOfConfig":"35"},{"size":216,"mtime":1640367108070,"results":"53","hashOfConfig":"35"},{"size":3477,"mtime":1640369219586,"results":"54","hashOfConfig":"35"},{"size":4061,"mtime":1640369336129,"results":"55","hashOfConfig":"35"},{"size":4178,"mtime":1640656032314,"results":"56","hashOfConfig":"35"},{"size":1078,"mtime":1640547063509,"results":"57","hashOfConfig":"35"},{"size":1959,"mtime":1640368555730,"results":"58","hashOfConfig":"35"},{"size":1795,"mtime":1640650995434,"results":"59","hashOfConfig":"35"},{"size":858,"mtime":1640651681234,"results":"60","hashOfConfig":"35"},{"size":2780,"mtime":1640649492149,"results":"61","hashOfConfig":"35"},{"size":1705,"mtime":1640556162733,"results":"62","hashOfConfig":"35"},{"size":2372,"mtime":1640556566441,"results":"63","hashOfConfig":"35"},{"size":2541,"mtime":1640556989693,"results":"64","hashOfConfig":"35"},{"size":2022,"mtime":1640368326755,"results":"65","hashOfConfig":"35"},{"size":164,"mtime":1640553844890,"results":"66","hashOfConfig":"35"},{"size":461,"mtime":1640653915498,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"sdhkcj",{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["150","151"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["152","153","154","155","156"],"import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"./components/Navigation\";\nimport * as sessionActions from \"./store/session\";\nimport WelcomePage from \"./components/WelcomePage\";\nimport AboutUs from \"./components/AboutUs\";\nimport QuickAction from \"./components/QuickAction\";\nimport SettingsPage from \"./components/SettingsPage\";\nimport { Box, createTheme } from \"@mui/system\";\nimport Discover from \"./components/Discover\";\nimport Profile from \"./components/Profile\";\nimport { Button, Toolbar, useScrollTrigger, Zoom } from \"@mui/material\";\nimport ArrowCircleUpIcon from \"@mui/icons-material/ArrowCircleUp\";\nimport Notification from \"./components/Notification\";\nimport useNotification from \"./components/Notification/useNotification\";\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n      });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Box\n        onClick={handleClick}\n        role=\"presentation\"\n        sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n      >\n        {children}\n      </Box>\n    </Zoom>\n  );\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  return (\n    isLoaded && (\n      <>\n        <ScrollTop>\n          <Button color=\"secondary\" variant=\"contained\">\n            <ArrowCircleUpIcon />\n          </Button>\n        </ScrollTop>\n        <div id=\"back-to-top-anchor\" disableGutters />\n        {sessionUser && <Navigation />}\n        <QuickAction />\n        <Switch>\n          <Route exact path=\"/\" component={WelcomePage} />\n          <Route path=\"/about\" component={AboutUs} />\n          <Route exact path=\"/discover\" component={Discover} />\n          <Route exact path=\"/settings\" component={SettingsPage} />\n          <Route exact path=\"/results\" />\n          <Route exact path=\"/user/:userId\" component={Profile} />\n        </Switch>\n      </>\n    )\n  );\n}\n\nexport default App;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",["157"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",["158"],"import { useState } from \"react\";\n\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\n\nimport { Box } from \"@mui/system\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Button, Stack, Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"fixed\",\n    // padding: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    margin: \"auto\",\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: \"#e8e8e8\",\n  },\n}));\n\nconst WelcomePage = () => {\n  const classes = useStyles();\n\n  const [showLogin, setShowLogin] = useState(true);\n  const [showSignup, setShowSignup] = useState(false);\n\n  const switchToSignup = () => {\n    setShowLogin(false);\n    setShowSignup(true);\n  };\n\n  const switchToLogin = () => {\n    setShowSignup(false);\n    setShowLogin(true);\n  };\n\n  return (\n    <Stack className={classes.root} spacing={3} justifyContent={\"center\"}>\n      <Typography variant=\"h3\" color=\"primary\" fontWeight=\"bold\">\n        Rumblr\n      </Typography>\n      {showLogin && <LoginForm />}\n      {showSignup && <SignupForm switchToLogin={switchToLogin} />}\n      <Stack alignItems=\"flex-end\" width={305}>\n        <Button\n          size=\"small\"\n          variant=\"text\"\n          color=\"primary\"\n          onClick={showLogin ? switchToSignup : switchToLogin}\n        >\n          {showLogin ? \"Don't have an account?\" : \"Already have an account?\"}\n        </Button>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default WelcomePage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["159","160","161"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Button,\n  CardActions,\n  Input,\n  CardMedia,\n  Typography,\n  TextField,\n  Stack,\n  Container,\n} from \"@mui/material\";\nimport { createNewPost } from \"../../store/post\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport S3FileUpload from \"react-s3\";\nimport useGlobalStyles from \"../useGlobalStyles\";\nimport { Box } from \"@mui/system\";\n\nconst CreatePost = ({\n  user,\n  setCreatePostVisible,\n  alertCreatePostSuccess,\n  closeCreatePost,\n}) => {\n  const dispatch = useDispatch();\n  const globalStyles = useGlobalStyles();\n  const [body, setBody] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n  const updateBody = (e) => setBody(e.target.value);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: user.username,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    S3FileUpload.uploadFile(selectedImage, config)\n      .then((data) => {\n        dispatch(\n          createNewPost({ content: data.location, body, tags, userId: user.id })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n          alertCreatePostSuccess();\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <form>\n      <Stack\n        padding={5}\n        spacing={3}\n        sx={{\n          width: \"500px\",\n          marginBottom: \"20px\",\n          backgroundColor: \"#ffffff\",\n          // borderRadius: 1,\n        }}\n      >\n        <Box sx={{ width: \"100%\" }}>\n          {selectedImage && (\n            <CardMedia\n              sx={{ backgroundColor: \"#ffffff\", width: \"100%\" }}\n              component=\"img\"\n              image={URL.createObjectURL(selectedImage)}\n            />\n          )}\n          <label style={{ width: \"100%\" }}>\n            <Input\n              accept=\"image/*\"\n              onChange={updateSelectedImage}\n              style={{ display: \"none\", width: \"100%\" }}\n              type=\"file\"\n            />\n            {!selectedImage && (\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  height: \"200px\",\n                }}\n                component=\"span\"\n              >\n                <ImageIcon color=\"primary\" />\n              </Button>\n            )}\n          </label>\n        </Box>\n        <TextField\n          color=\"secondary\"\n          multiline\n          onChange={updateBody}\n          value={body}\n          label=\"Body\"\n          sx={{\n            width: \"100%\",\n          }}\n        />\n        <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"warning\"\n            onClick={\n              selectedImage ? () => setSelectedImage(null) : closeCreatePost\n            }\n          >\n            <Typography>\n              {selectedImage ? \"Clear selection\" : \"Cancel\"}\n            </Typography>\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={onSubmit}\n          >\n            <SendIcon sx={{ marginRight: 1 }} />\n            <Typography>Post</Typography>\n          </Button>\n        </Stack>\n      </Stack>\n    </form>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["162","163"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["164","165"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Container,\n  Drawer,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\n\nfunction srcset(image, size, rows = 1, cols = 1) {\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${\n      size * rows\n    }&fit=crop&auto=format&dpr=2 2x`,\n  };\n}\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(\"0\");\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value=\"0\" sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value=\"1\" sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value=\"0\">\n              <ImageList\n                variant=\"quilted\"\n                cols={2}\n                children={\n                  posts &&\n                  posts.map((post) => (\n                    <ImageListItem key={post.id}>\n                      <img {...srcset(post.content, 121)} loading=\"lazy\" />\n                    </ImageListItem>\n                  ))\n                }\n              />\n              <Stack spacing={5}></Stack>\n            </TabPanel>\n            <TabPanel value=\"1\">hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n",["166","167"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",["168","169","170","171","172"],"import {\n  Modal,\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n} from \"@mui/material\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport CreatePost from \"../CreatePost\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"../Notification\";\n\nconst QuickAction = () => {\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const closeAlertCreatePostSuccess = () => setSuccessNotificationOpen(false);\n  const alertCreatePostSuccess = () => setSuccessNotificationOpen(true);\n\n  if (sessionUser)\n    return (\n      <Box>\n        <Notification\n          open={successNotificationOpen}\n          handleClose={closeAlertCreatePostSuccess}\n          message={\"Post created\"}\n        />\n        <Modal\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          open={createPostVisible}\n          onClose={() => setCreatePostVisible(false)}\n        >\n          <CreatePost\n            user={sessionUser}\n            setCreatePostVisible={setCreatePostVisible}\n            alertCreatePostSuccess={alertCreatePostSuccess}\n          />\n        </Modal>\n      </Box>\n    );\n\n  return null;\n};\n\nexport default QuickAction;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js",["173"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js",["174","175","176"],"import { Button, IconButton, Popover, Typography } from \"@mui/material\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport { deletePost } from \"../../../store/post\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useRef, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport useNotification from \"../../Notification/useNotification\";\nimport Notification from \"../../Notification\";\n\nconst DeletePost = ({ postId }) => {\n  const dispatch = useDispatch();\n  const notificationRef = useRef();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  const closePopover = () => setPopoverOpen(false);\n  const openPopover = (e) => {\n    setPopoverOpen(true);\n    setAnchorElement(e.currentTarget);\n  };\n\n  const deleteUserPost = async (e) => {\n    e.preventDefault();\n    await dispatch(deletePost({ postId, notificationRef }));\n  };\n\n  return (\n    <>\n      <Notification ref={notificationRef} />\n      <Delete\n        aria-describedby=\"delete-post\"\n        variant=\"contained\"\n        onClick={openPopover}\n      />\n      <Popover\n        id=\"delete-post\"\n        open={popoverOpen}\n        onClose={closePopover}\n        anchorEl={anchorElement}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"5px\",\n          }}\n        >\n          <Button\n            color=\"warning\"\n            sx={{ mr: \"10px\" }}\n            variant=\"contained\"\n            onClick={deleteUserPost}\n          >\n            Delete\n          </Button>\n          <Button variant=\"outlined\" onClick={closePopover}>\n            Cancel\n          </Button>\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default DeletePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js",["177"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Alert,\n  FormControl,\n  Input,\n  Grid,\n  Stack,\n  TextField,\n} from \"@mui/material\";\n\nimport * as sessionActions from \"../../../store/session\";\nimport { makeStyles } from \"@mui/styles\";\nimport useGlobalStyles from \"../../useGlobalStyles\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: 305,\n    height: \"100%\",\n  },\n}));\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const globalStyles = useGlobalStyles();\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateCredential = (e) => setCredential(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    dispatch(sessionActions.login(credential, password)).catch((res) => {\n      setErrors(res.data.errors);\n    });\n  };\n\n  const demoLogin = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    let demoCredential = \"demo-user\";\n    let demoPassword = \"password\";\n    dispatch(sessionActions.login(demoCredential, demoPassword)).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Username or Email\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateCredential}\n              value={credential}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Password\"\n              className={globalStyles.input}\n              disableUnderline\n              type=\"password\"\n              onChange={updatePassword}\n              value={password}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n              <Button\n                disableElevation\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"contained\"\n                onClick={onSubmit}\n                type=\"submit\"\n              >\n                Log in\n              </Button>\n              <Button\n                disableElevation\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"outlined\"\n                className={globalStyles.button}\n                onClick={demoLogin}\n              >\n                Demo\n              </Button>\n            </Stack>\n          </FormControl>\n        </Grid>\n        <Stack paddingTop={2} spacing={2}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"warning\">{error}</Alert>)}\n        </Stack>\n      </Grid>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js",["178"],"import {\n  Button,\n  Alert,\n  Grid,\n  FormControl,\n  Input,\n  Stack,\n  TextField,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as sessionActions from \"../../../store/session\";\nimport useGlobalStyles from \"../../useGlobalStyles\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: 305,\n    height: \"100%\",\n  },\n}));\n\nconst SignupForm = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const globalStyles = useGlobalStyles();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const updateUsername = (e) => setUsername(e.target.value);\n  const updateEmail = (e) => setEmail(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n  const updateConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n\n      const payload = {\n        email,\n        username,\n        password,\n      };\n\n      dispatch(sessionActions.signup(payload)).catch((res) => {\n        setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors([\n      \"Confirm Password field must be the same as the Password\",\n    ]);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Username\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateUsername}\n              value={username}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Email\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateEmail}\n              value={email}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Password\"\n              type=\"password\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updatePassword}\n              value={password}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Confirm password\"\n              type=\"password\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateConfirmPassword}\n              value={confirmPassword}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"contained\"\n                onClick={onSubmit}\n                type=\"submit\"\n              >\n                Sign up\n              </Button>\n            </Stack>\n          </FormControl>\n        </Grid>\n        <Stack paddingTop={2} spacing={2}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"warning\">{error}</Alert>)}\n        </Stack>\n      </Grid>\n    </form>\n  );\n};\n\nexport default SignupForm;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js",["179","180","181","182","183"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js",["184"],"import { Skeleton, Stack, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostCard from \"../PostCard\";\n\nimport { getRandomPost } from \"../../store/post\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"500px\",\n  },\n}));\n\nconst CheckoutPost = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const randomPost = useSelector((state) => state.posts.randomPost);\n\n  useEffect(() => dispatch(getRandomPost()), []);\n\n  return randomPost ? (\n    <Stack spacing={2} className={classes.root}>\n      <Typography fontWeight=\"bold\" color=\"#ffffff\">\n        Checkout this post by {randomPost.User.username}\n      </Typography>\n      <PostCard post={randomPost} />\n    </Stack>\n  ) : (\n    <Stack spacing={1} className={classes.root}>\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={30} />\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={500} />\n    </Stack>\n  );\n};\n\nexport default CheckoutPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js",["185"],"import { Avatar, Button, Skeleton, Stack, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getNewestUsers } from \"../../store/discover\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"500px\",\n  },\n  newestUserButton: {\n    justifyContent: \"start\",\n  },\n}));\n\nconst NewestMembers = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const newestUsers = useSelector((state) => state.discover.newestUsers);\n\n  useEffect(() => dispatch(getNewestUsers()), []);\n\n  return newestUsers ? (\n    <Stack spacing={2} className={classes.root}>\n      <Typography fontWeight=\"bold\" color=\"#ffffff\">\n        Our newest members\n      </Typography>\n      <Stack spacing={1}>\n        {newestUsers.map((newestUser) => (\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            key={newestUser.id}\n            className={classes.newestUserButton}\n            onClick={() => history.push(`/user/${newestUser.id}`)}\n          >\n            <Avatar\n              variant=\"square\"\n              src={newestUser.profilePicture}\n              sx={{ marginRight: 2 }}\n            />\n            <Typography variant=\"subtitle2\">{newestUser.username}</Typography>\n          </Button>\n        ))}\n      </Stack>\n    </Stack>\n  ) : (\n    <Stack className={classes.root} spacing={1}>\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={30} />\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={50} />\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={50} />\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={50} />\n      <Skeleton animation=\"wave\" variant=\"rectangular\" height={50} />\n    </Stack>\n  );\n};\n\nexport default NewestMembers;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/EditPost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUs/index.js",["186","187"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateBio.js",["202"],"import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useGlobalStyles from \"../useGlobalStyles\";\n\nconst UpdateBio = ({ sessionUser, updateSessionUser, notificationRef }) => {\n  const globalStyles = useGlobalStyles();\n  const dispatch = useDispatch();\n  const [bio, setBio] = useState(sessionUser.bio);\n  const [isChanged, setIsChanged] = useState(false);\n\n  const updateBio = (e) => {\n    setIsChanged(true);\n    setBio(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSessionUser(sessionUser.id, { bio }));\n    setIsChanged(false);\n    return notificationRef.current.toggleNotification({\n      message: \"Bio updated!\",\n      severity: \"success\",\n    });\n  };\n\n  useEffect(() => {\n    if (bio === sessionUser.bio) {\n      setIsChanged(false);\n    }\n  }, [bio]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Stack>\n        <Typography color=\"primary\" variant=\"h6\" gutterBottom={2}>\n          Bio\n        </Typography>\n        <TextField\n          color=\"primary\"\n          variant=\"outlined\"\n          onChange={updateBio}\n          label=\"Bio\"\n          value={bio}\n          minRows={5}\n          disableUnderline\n          multiline\n          className={globalStyles.input}\n        />\n        <Stack padding=\"10px 0px\">\n          <Button\n            disableElevation\n            color=\"primary\"\n            type=\"submit\"\n            size=\"small\"\n            variant=\"contained\"\n            disabled={!isChanged}\n          >\n            Update\n          </Button>\n        </Stack>\n      </Stack>\n    </form>\n  );\n};\n\nexport default UpdateBio;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePersonalInformation.js",["203"],"import { Button, Stack, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useGlobalStyles from \"../useGlobalStyles\";\n\nconst UpdatePersonalInformation = ({\n  sessionUser,\n  updateSessionUser,\n  notificationRef,\n}) => {\n  const globalStyles = useGlobalStyles();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(sessionUser.username);\n  const [email, setEmail] = useState(sessionUser.email);\n  const [isChanged, setIsChanged] = useState(false);\n\n  const updateUsername = (e) => {\n    setIsChanged(true);\n    setUsername(e.target.value);\n  };\n  const updateEmail = (e) => {\n    setIsChanged(true);\n    setEmail(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSessionUser(sessionUser.id, { email, username }));\n    setIsChanged(false);\n    return notificationRef.current.toggleNotification({\n      message: \"Personal information updated!\",\n      severity: \"success\",\n    });\n  };\n\n  useEffect(() => {\n    if (username === sessionUser.username && email === sessionUser.email) {\n      setIsChanged(false);\n    }\n  }, [username, email]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Stack>\n        <Typography color=\"primary\" variant=\"h6\" gutterBottom={2}>\n          Personal information\n        </Typography>\n        <Stack direction=\"column\" spacing={2}>\n          <TextField\n            color=\"primary\"\n            variant=\"outlined\"\n            label=\"Username\"\n            onChange={updateUsername}\n            value={username}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n          <TextField\n            color=\"primary\"\n            variant=\"outlined\"\n            label=\"Email\"\n            onChange={updateEmail}\n            value={email}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n        </Stack>\n        <Stack padding=\"10px 0px\">\n          <Button\n            color=\"primary\"\n            disableElevation\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={!isChanged}\n          >\n            Update\n          </Button>\n        </Stack>\n      </Stack>\n    </form>\n  );\n};\n\nexport default UpdatePersonalInformation;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePassword.js",["204"],"import {\n  Button,\n  FormControl,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useGlobalStyles from \"../useGlobalStyles\";\n\nconst UpdatePassword = ({\n  sessionUser,\n  updateSessionUser,\n  notificationRef,\n}) => {\n  const globalStyles = useGlobalStyles();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isChanged, setIsChanged] = useState(false);\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const updateConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      notificationRef.current.toggleNotification({\n        message: \"Password updated!\",\n        severity: \"success\",\n      });\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setIsChanged(false);\n      dispatch(updateSessionUser(sessionUser.id, { password }));\n    }\n  };\n\n  useEffect(() => {\n    if (password === confirmPassword && password !== \"\") {\n      setIsChanged(true);\n    }\n  }, [password, confirmPassword]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Stack>\n        <Typography color=\"primary\" variant=\"h6\" gutterBottom={2}>\n          Password\n        </Typography>\n        <Stack direction=\"column\" spacing={2}>\n          <TextField\n            color=\"primary\"\n            variant=\"outlined\"\n            type=\"password\"\n            label=\"New password\"\n            onChange={updatePassword}\n            value={password}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n          <TextField\n            color=\"primary\"\n            variant=\"outlined\"\n            type=\"password\"\n            error={password !== confirmPassword}\n            label=\"Confirm new password\"\n            value={confirmPassword}\n            onChange={updateConfirmPassword}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n        </Stack>\n        <Stack padding=\"10px 0px\">\n          <Button\n            disableElevation\n            color=\"primary\"\n            type=\"submit\"\n            size=\"small\"\n            variant=\"contained\"\n            disabled={!isChanged}\n          >\n            Update\n          </Button>\n        </Stack>\n      </Stack>\n    </form>\n  );\n};\n\nexport default UpdatePassword;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateProfilePicture.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/useNotification.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useBottomScrollListener/index.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":1,"column":21,"nodeType":"211","messageId":"212","endLine":1,"endColumn":27},{"ruleId":"209","severity":1,"message":"213","line":11,"column":15,"nodeType":"211","messageId":"212","endLine":11,"endColumn":26},{"ruleId":"209","severity":1,"message":"214","line":14,"column":18,"nodeType":"211","messageId":"212","endLine":14,"endColumn":25},{"ruleId":"209","severity":1,"message":"215","line":16,"column":8,"nodeType":"211","messageId":"212","endLine":16,"endColumn":20},{"ruleId":"209","severity":1,"message":"216","line":17,"column":8,"nodeType":"211","messageId":"212","endLine":17,"endColumn":23},{"ruleId":"209","severity":1,"message":"217","line":107,"column":11,"nodeType":"211","messageId":"212","endLine":107,"endColumn":19},{"ruleId":"209","severity":1,"message":"218","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":13},{"ruleId":"209","severity":1,"message":"219","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":14},{"ruleId":"209","severity":1,"message":"220","line":11,"column":3,"nodeType":"211","messageId":"212","endLine":11,"endColumn":12},{"ruleId":"209","severity":1,"message":"221","line":27,"column":9,"nodeType":"211","messageId":"212","endLine":27,"endColumn":21},{"ruleId":"205","replacedBy":"222"},{"ruleId":"207","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":38,"column":6,"nodeType":"226","endLine":38,"endColumn":25,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":91,"column":23,"nodeType":"230","endLine":91,"endColumn":76},{"ruleId":"205","replacedBy":"231"},{"ruleId":"207","replacedBy":"232"},{"ruleId":"209","severity":1,"message":"233","line":3,"column":3,"nodeType":"211","messageId":"212","endLine":3,"endColumn":12},{"ruleId":"209","severity":1,"message":"234","line":4,"column":3,"nodeType":"211","messageId":"212","endLine":4,"endColumn":18},{"ruleId":"209","severity":1,"message":"235","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":16},{"ruleId":"209","severity":1,"message":"236","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":18},{"ruleId":"209","severity":1,"message":"237","line":11,"column":10,"nodeType":"211","messageId":"212","endLine":11,"endColumn":21},{"ruleId":"209","severity":1,"message":"238","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":16},{"ruleId":"209","severity":1,"message":"239","line":1,"column":18,"nodeType":"211","messageId":"212","endLine":1,"endColumn":28},{"ruleId":"209","severity":1,"message":"240","line":1,"column":39,"nodeType":"211","messageId":"212","endLine":1,"endColumn":49},{"ruleId":"209","severity":1,"message":"216","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":23},{"ruleId":"209","severity":1,"message":"241","line":8,"column":3,"nodeType":"211","messageId":"212","endLine":8,"endColumn":8},{"ruleId":"209","severity":1,"message":"241","line":6,"column":3,"nodeType":"211","messageId":"212","endLine":6,"endColumn":8},{"ruleId":"209","severity":1,"message":"210","line":1,"column":21,"nodeType":"211","messageId":"212","endLine":1,"endColumn":27},{"ruleId":"209","severity":1,"message":"238","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":9},{"ruleId":"209","severity":1,"message":"242","line":19,"column":8,"nodeType":"211","messageId":"212","endLine":19,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":27,"column":5,"nodeType":"245","messageId":"246","endLine":27,"endColumn":13},{"ruleId":"209","severity":1,"message":"247","line":42,"column":9,"nodeType":"211","messageId":"212","endLine":42,"endColumn":22},{"ruleId":"224","severity":1,"message":"248","line":20,"column":46,"nodeType":"226","endLine":20,"endColumn":48,"suggestions":"249"},{"ruleId":"224","severity":1,"message":"248","line":25,"column":47,"nodeType":"226","endLine":25,"endColumn":49,"suggestions":"250"},{"ruleId":"209","severity":1,"message":"240","line":1,"column":23,"nodeType":"211","messageId":"212","endLine":1,"endColumn":33},{"ruleId":"209","severity":1,"message":"218","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":13},{"ruleId":"209","severity":1,"message":"251","line":3,"column":3,"nodeType":"211","messageId":"212","endLine":3,"endColumn":7},{"ruleId":"209","severity":1,"message":"252","line":4,"column":3,"nodeType":"211","messageId":"212","endLine":4,"endColumn":14},{"ruleId":"209","severity":1,"message":"253","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":13},{"ruleId":"209","severity":1,"message":"220","line":6,"column":3,"nodeType":"211","messageId":"212","endLine":6,"endColumn":12},{"ruleId":"209","severity":1,"message":"254","line":7,"column":3,"nodeType":"211","messageId":"212","endLine":7,"endColumn":10},{"ruleId":"209","severity":1,"message":"255","line":8,"column":3,"nodeType":"211","messageId":"212","endLine":8,"endColumn":7},{"ruleId":"209","severity":1,"message":"238","line":9,"column":3,"nodeType":"211","messageId":"212","endLine":9,"endColumn":9},{"ruleId":"209","severity":1,"message":"256","line":10,"column":3,"nodeType":"211","messageId":"212","endLine":10,"endColumn":11},{"ruleId":"209","severity":1,"message":"257","line":22,"column":10,"nodeType":"211","messageId":"212","endLine":22,"endColumn":17},{"ruleId":"243","severity":1,"message":"244","line":32,"column":5,"nodeType":"245","messageId":"246","endLine":32,"endColumn":13},{"ruleId":"209","severity":1,"message":"258","line":46,"column":9,"nodeType":"211","messageId":"212","endLine":46,"endColumn":20},{"ruleId":"224","severity":1,"message":"259","line":55,"column":6,"nodeType":"226","endLine":55,"endColumn":8,"suggestions":"260"},{"ruleId":"224","severity":1,"message":"225","line":57,"column":54,"nodeType":"226","endLine":57,"endColumn":56,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":90,"column":13,"nodeType":"264","endLine":90,"endColumn":26},{"ruleId":"224","severity":1,"message":"265","line":31,"column":6,"nodeType":"226","endLine":31,"endColumn":11,"suggestions":"266"},{"ruleId":"224","severity":1,"message":"267","line":40,"column":6,"nodeType":"226","endLine":40,"endColumn":23,"suggestions":"268"},{"ruleId":"209","severity":1,"message":"269","line":3,"column":3,"nodeType":"211","messageId":"212","endLine":3,"endColumn":14},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'createTheme' is defined but never used.","'Toolbar' is defined but never used.","'Notification' is defined but never used.","'useNotification' is defined but never used.","'response' is assigned a value but never used.","'Box' is defined but never used.","'CardActions' is defined but never used.","'Container' is defined but never used.","'globalStyles' is assigned a value but never used.",["270"],["271"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["272"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["270"],["271"],"'SpeedDial' is defined but never used.","'SpeedDialAction' is defined but never used.","'SpeedDialIcon' is defined but never used.","'CreateIcon' is defined but never used.","'useDispatch' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'Input' is defined but never used.","'useBottomScrollListener' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","'increaseLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["273"],["274"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'Skeleton' is defined but never used.","'Masonry' is defined but never used.","'sessionUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["275"],["276"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'sessionUser.bio'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has missing dependencies: 'sessionUser.email' and 'sessionUser.username'. Either include them or remove the dependency array.",["278"],"'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch]",{"range":"294","text":"295"},{"range":"296","text":"295"},"Update the dependencies array to be: [userId]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch, userId]",{"range":"299","text":"300"},"Update the dependencies array to be: [bio, sessionUser.bio]",{"range":"301","text":"302"},"Update the dependencies array to be: [username, email, sessionUser.username, sessionUser.email]",{"range":"303","text":"304"},[1088,1107],"[dispatch, profileDrawerOpen, userId]",[570,572],"[dispatch]",[698,700],[1351,1353],"[userId]",[1410,1412],"[dispatch, userId]",[910,915],"[bio, sessionUser.bio]",[1175,1192],"[username, email, sessionUser.username, sessionUser.email]"]