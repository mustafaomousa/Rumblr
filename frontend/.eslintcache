[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"18"},{"size":1042,"mtime":1633891798490,"results":"19","hashOfConfig":"20"},{"size":1365,"mtime":1633970372669,"results":"21","hashOfConfig":"20"},{"size":787,"mtime":1633891798490,"results":"22","hashOfConfig":"20"},{"size":1691,"mtime":1633895346928,"results":"23","hashOfConfig":"20"},{"size":2553,"mtime":1633908664502,"results":"24","hashOfConfig":"20"},{"size":786,"mtime":1633901723093,"results":"25","hashOfConfig":"20"},{"size":611,"mtime":1633891798491,"results":"26","hashOfConfig":"20"},{"size":2862,"mtime":1633891798487,"results":"27","hashOfConfig":"20"},{"size":1206,"mtime":1633952937525,"results":"28","hashOfConfig":"20"},{"size":3503,"mtime":1633970366704,"results":"29","hashOfConfig":"20"},{"size":863,"mtime":1633891798490,"results":"30","hashOfConfig":"20"},{"size":3173,"mtime":1633891798488,"results":"31","hashOfConfig":"20"},{"size":1330,"mtime":1633970168444,"results":"32","hashOfConfig":"20"},{"size":2739,"mtime":1633971164252,"results":"33","hashOfConfig":"20"},{"size":2318,"mtime":1633908804871,"results":"34","hashOfConfig":"20"},{"size":323,"mtime":1633891798486,"results":"35","hashOfConfig":"20"},{"size":3340,"mtime":1633908855477,"results":"36","hashOfConfig":"20"},{"size":1205,"mtime":1633969857752,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"sdhkcj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["80","81"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["82"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",["83"],"import { fetch } from \"./csrf\";\n\nconst LOAD_POSTS = \"post/getAllPosts\";\nconst ADD_POST = \"post/createNewPost\";\nconst DELETE_POST = \"post/deletePost\";\nconst UPDATE_POST = \"post/updatePost\";\n\nconst getAllPosts = (posts) => {\n  return {\n    type: LOAD_POSTS,\n    payload: posts,\n  };\n};\n\nconst addNewPost = (post) => {\n  return {\n    type: ADD_POST,\n    payload: post,\n  };\n};\n\nconst deleteUserPost = (postId) => {\n  return {\n    type: DELETE_POST,\n    payload: postId,\n  };\n};\n\nconst updateUserPost = (post) => {\n  return {\n    type: UPDATE_POST,\n    payload: post,\n  };\n};\n\nexport const updatePost =\n  ({ tags, postId, title, body }) =>\n  async (dispatch) => {\n    const response = await fetch(`/api/posts`, {\n      method: \"PUT\",\n      body: JSON.stringify({ tags, postId, title, body }),\n    });\n\n    if (response.ok) {\n      dispatch(getPosts());\n    }\n  };\n\nexport const deletePost =\n  ({ postId }) =>\n  async (dispatch) => {\n    const response = await fetch(`/api/posts`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ postId }),\n    });\n\n    if (response.ok && response.data.deleted) {\n      dispatch(deleteUserPost(postId));\n    }\n  };\n\nexport const getPosts = (limit, userId) => async (dispatch) => {\n  const response = await fetch(`/api/posts?limit=${limit}&userId=${userId}`);\n  if (response.ok) {\n    dispatch(getAllPosts(response.data.posts));\n    console.log(response.data.posts);\n    return response;\n  }\n};\n\nexport const createNewPost = (payload) => async (dispatch) => {\n  const { content, body, tags, userId } = payload;\n  const response = await fetch(\"/api/posts\", {\n    method: \"POST\",\n    body: JSON.stringify({ content, body, tags, userId }),\n  });\n\n  if (response.ok) {\n    dispatch(addNewPost(response.data.newPost));\n    console.log(response.data);\n    return response;\n  }\n};\n\nconst initialState = {};\n\nconst postReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case LOAD_POSTS:\n      newState = { ...state };\n      action.payload.map((post) => (newState[\"_\" + post.id] = post));\n      return newState;\n    case ADD_POST:\n      newState = Object.assign(\n        { [\"_\" + action.payload.id]: action.payload },\n        state\n      );\n      return newState;\n    case UPDATE_POST:\n      newState = { ...state };\n      newState[\"_\" + action.payload.id] = action.payload;\n      return newState;\n    case DELETE_POST:\n      newState = { ...state };\n      delete newState[\"_\" + action.payload];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js",["84","85","86"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  CardHeader,\n  Typography,\n  CardActions,\n  Input,\n  Avatar,\n  Alert,\n} from \"@mui/material\";\nimport \"./login.css\";\n\nimport * as sessionActions from \"../../store/session\";\nimport { Box } from \"@mui/system\";\n\nconst LoginFormPage = ({ switchToSignup }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateCredential = (e) => setCredential(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    dispatch(sessionActions.login(credential, password)).catch((res) => {\n      setErrors(res.data.errors);\n    });\n\n    // return history.push(\"/discover\");\n  };\n\n  const demoLogin = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    let demoCredential = \"demo-user\";\n    let demoPassword = \"password\";\n    dispatch(sessionActions.login(demoCredential, demoPassword)).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n\n    // return history.push(\"/discover\");\n  };\n\n  return (\n    <Card className=\"LoginFormPage\">\n      <CardHeader\n        align=\"center\"\n        subheader=\"Log in\"\n        title={\n          <Typography\n            sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n          >\n            Rumblr\n          </Typography>\n        }\n      />\n      <CardContent>\n        <form className=\"LoginForm\">\n          <TextField\n            id=\"input\"\n            type=\"text\"\n            onChange={updateCredential}\n            value={credential}\n            label=\"username/email\"\n            required\n          />\n          <br />\n          <TextField\n            id=\"input\"\n            type=\"password\"\n            onChange={updatePassword}\n            value={password}\n            label=\"password\"\n            required\n          />\n        </form>\n        <Box sx={{ paddingTop: \"20px\" }}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"error\">{error}</Alert>)}\n        </Box>\n      </CardContent>\n      <CardActions className=\"LoginFormFooter\">\n        <div>\n          <Button onClick={switchToSignup}>Switch to sign up</Button>\n        </div>\n        <div>\n          <Button onClick={onSubmit}>Log in</Button>\n          <Button onClick={demoLogin}>Demo</Button>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default LoginFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js",["87","88","89"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js",["90","91"],"import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  Button,\n  Alert,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport * as sessionActions from \"../../store/session\";\n\nimport \"./signup.css\";\n\nconst SignupFormPage = ({ switchToLogin }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateUsername = (e) => setUsername(e.target.value);\n  const updateEmail = (e) => setEmail(e.target.value);\n  const updatedPassword = (e) => setPassword(e.target.value);\n  const updatedConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n\n      const payload = {\n        email,\n        username,\n        password,\n      };\n\n      dispatch(sessionActions.signup(payload)).catch((res) => {\n        console.log(res);\n        setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors([\n      \"Confirm Password field must be the same as the Password\",\n    ]);\n  };\n\n  return (\n    <Card className=\"SignupFormPage\">\n      <CardHeader\n        align=\"center\"\n        subheader=\"Sign up\"\n        title={\n          <Typography\n            sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n          >\n            Rumblr\n          </Typography>\n        }\n      />\n      <CardContent>\n        <form className=\"SignupForm\">\n          <TextField\n            onChange={updateUsername}\n            value={username}\n            label=\"create a username\"\n            required\n          />\n          <br />\n          <TextField\n            onChange={updateEmail}\n            value={email}\n            label=\"enter email\"\n            required\n          />\n          <br />\n          <TextField\n            type=\"password\"\n            onChange={updatedPassword}\n            label=\"create a password\"\n            required\n          />\n          <br />\n          <TextField\n            type=\"password\"\n            onChange={updatedConfirmPassword}\n            label=\"confirm password\"\n            required\n          />\n        </form>\n        {errors && (\n          <Box sx={{ paddingTop: \"20px\" }}>\n            {errors.map((error) => (\n              <Alert severity=\"error\">{error}</Alert>\n            ))}\n          </Box>\n        )}\n      </CardContent>\n      <CardActions className=\"SignupFormFooter\">\n        <div>\n          <Button onClick={switchToLogin}>Switch to log in</Button>\n        </div>\n        <div>\n          <Button onClick={onSubmit}>Join</Button>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SignupFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["92","93"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["94","95"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["96"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Container,\n  Drawer,\n  IconButton,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport SmartButtonIcon from \"@mui/icons-material/SmartButton\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\n\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value={0} sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value={1} sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value={0}>\n              <Stack spacing={5}>\n                {posts &&\n                  posts.map((post) => (\n                    <Card>\n                      <CardMedia\n                        image={post.content}\n                        component=\"img\"\n                        height=\"200px\"\n                      />\n                      <CardContent>\n                        <Typography>{post.body}</Typography>\n                      </CardContent>\n                      <CardActions>\n                        <IconButton>\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton>\n                          <SmartButtonIcon />\n                        </IconButton>\n                      </CardActions>\n                    </Card>\n                  ))}\n              </Stack>\n            </TabPanel>\n            <TabPanel value={1}>hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":22,"column":9,"nodeType":"103","messageId":"104","endLine":22,"endColumn":13},{"ruleId":"101","severity":1,"message":"105","line":29,"column":7,"nodeType":"103","messageId":"104","endLine":29,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":12,"column":3,"nodeType":"103","messageId":"104","endLine":12,"endColumn":8},{"ruleId":"101","severity":1,"message":"107","line":13,"column":3,"nodeType":"103","messageId":"104","endLine":13,"endColumn":9},{"ruleId":"101","severity":1,"message":"108","line":22,"column":9,"nodeType":"103","messageId":"104","endLine":22,"endColumn":16},{"ruleId":"101","severity":1,"message":"109","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":18},{"ruleId":"101","severity":1,"message":"110","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":21,"column":6,"nodeType":"113","endLine":21,"endColumn":27,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"107","line":2,"column":3,"nodeType":"103","messageId":"104","endLine":2,"endColumn":9},{"ruleId":"101","severity":1,"message":"108","line":22,"column":9,"nodeType":"103","messageId":"104","endLine":22,"endColumn":16},{"ruleId":"101","severity":1,"message":"115","line":22,"column":10,"nodeType":"103","messageId":"104","endLine":22,"endColumn":24},{"ruleId":"101","severity":1,"message":"116","line":22,"column":26,"nodeType":"103","messageId":"104","endLine":22,"endColumn":43},{"ruleId":"97","replacedBy":"117"},{"ruleId":"99","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":35,"column":6,"nodeType":"113","endLine":35,"endColumn":25,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'updateUserPost' is assigned a value but never used.","'Input' is defined but never used.","'Avatar' is defined but never used.","'history' is assigned a value but never used.","'CreatePost' is defined but never used.","'QuickAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.",["121"],["122"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser.id]",{"range":"129","text":"130"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"131","text":"132"},[743,764],"[dispatch, loadLimit, sessionUser.id]",[996,1015],"[dispatch, profileDrawerOpen, userId]"]