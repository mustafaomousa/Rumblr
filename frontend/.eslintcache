[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/EditPost/index.js":"25","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUs/index.js":"26","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js":"27","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateBio.js":"28","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePersonalInformation.js":"29","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePassword.js":"30","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateProfilePicture.js":"31"},{"size":1392,"mtime":1639777252485,"results":"32","hashOfConfig":"33"},{"size":2434,"mtime":1640209195600,"results":"34","hashOfConfig":"33"},{"size":787,"mtime":1633891798490,"results":"35","hashOfConfig":"33"},{"size":2544,"mtime":1640191104014,"results":"36","hashOfConfig":"33"},{"size":2520,"mtime":1634681119199,"results":"37","hashOfConfig":"33"},{"size":857,"mtime":1634582668536,"results":"38","hashOfConfig":"33"},{"size":776,"mtime":1640190454381,"results":"39","hashOfConfig":"33"},{"size":6919,"mtime":1640204787453,"results":"40","hashOfConfig":"33"},{"size":1476,"mtime":1639699601195,"results":"41","hashOfConfig":"33"},{"size":3193,"mtime":1640204566845,"results":"42","hashOfConfig":"33"},{"size":5178,"mtime":1640209264050,"results":"43","hashOfConfig":"33"},{"size":323,"mtime":1633891798486,"results":"44","hashOfConfig":"33"},{"size":3043,"mtime":1634681033861,"results":"45","hashOfConfig":"33"},{"size":1469,"mtime":1639778838596,"results":"46","hashOfConfig":"33"},{"size":333,"mtime":1634169802572,"results":"47","hashOfConfig":"33"},{"size":3175,"mtime":1640194211349,"results":"48","hashOfConfig":"33"},{"size":1542,"mtime":1640204822109,"results":"49","hashOfConfig":"33"},{"size":1169,"mtime":1634584841431,"results":"50","hashOfConfig":"33"},{"size":234,"mtime":1640203510079,"results":"51","hashOfConfig":"33"},{"size":3411,"mtime":1640205888860,"results":"52","hashOfConfig":"33"},{"size":4061,"mtime":1640205868736,"results":"53","hashOfConfig":"33"},{"size":2118,"mtime":1640196387067,"results":"54","hashOfConfig":"33"},{"size":1386,"mtime":1640209282843,"results":"55","hashOfConfig":"33"},{"size":1871,"mtime":1640206344489,"results":"56","hashOfConfig":"33"},{"size":1453,"mtime":1640205366114,"results":"57","hashOfConfig":"33"},{"size":1514,"mtime":1639779433697,"results":"58","hashOfConfig":"33"},{"size":3213,"mtime":1640209186896,"results":"59","hashOfConfig":"33"},{"size":1241,"mtime":1640191180391,"results":"60","hashOfConfig":"33"},{"size":1802,"mtime":1640191534265,"results":"61","hashOfConfig":"33"},{"size":1931,"mtime":1640192082319,"results":"62","hashOfConfig":"33"},{"size":1989,"mtime":1640194237705,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"sdhkcj",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["140","141"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["142","143"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",["144","145","146"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  Typography,\n  Button,\n  Stack,\n  AppBar,\n  Grid,\n  Link,\n  IconButton,\n  Modal,\n  Menu,\n  MenuItem,\n  Avatar,\n  useScrollTrigger,\n  Zoom,\n} from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/PersonRounded\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport * as sessionActions from \"../../store/session\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport Notification from \"../Notification\";\nimport CreatePost from \"../CreatePost\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"0 30px\",\n    height: 65,\n  },\n  searchInput: {\n    width: 200,\n  },\n  userIcon: {\n    minWidth: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n      });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Box\n        onClick={handleClick}\n        role=\"presentation\"\n        sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n      >\n        {children}\n      </Box>\n    </Zoom>\n  );\n}\n\nconst Navigation = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n  const closeAlertCreatePostSuccess = () => setSuccessNotificationOpen(false);\n  const alertCreatePostSuccess = () => setSuccessNotificationOpen(true);\n\n  const handleLogout = async () => {\n    dispatch(sessionActions.logout());\n    return history.push(\"/\");\n  };\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  return (\n    <AppBar className={classes.root} boxShadow={0}>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={6}>\n          <Link\n            href=\"/discover\"\n            fontSize=\"35px\"\n            fontWeight=\"bold\"\n            color=\"secondary\"\n            underline=\"none\"\n          >\n            <Typography variant=\"h4\" fontWeight={\"bold\"}>\n              Rumblr\n            </Typography>\n          </Link>\n        </Grid>\n        <Grid item xs={6}>\n          <Stack\n            width=\"100%\"\n            direction=\"row\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n            spacing={0.8}\n          >\n            <Button href=\"/discover\" size=\"small\" color=\"secondary\">\n              <HomeIcon />\n            </Button>\n            <Button href=\"/about\" size=\"small\" color=\"secondary\">\n              <HelpIcon />\n            </Button>\n            <Button\n              size=\"small\"\n              id=\"user-button\"\n              aria-controls=\"user-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={open ? \"true\" : undefined}\n              onClick={handleClick}\n              className={classes.userIcon}\n              // variant=\"outlined\"\n              color=\"secondary\"\n            >\n              <PersonIcon />\n              <Typography marginLeft={0.5} marginRight={0.5}>\n                {sessionUser.username}\n              </Typography>\n            </Button>\n            <Menu\n              id=\"user-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClick={handleClose}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"user-button\",\n              }}\n              sx={{ marginTop: 1 }}\n            >\n              <Stack\n                direction=\"column\"\n                padding=\"10px 20px\"\n                alignItems=\"center\"\n                spacing={1}\n                width={200}\n              >\n                <Stack alignItems=\"center\" width=\"100%\">\n                  <Link\n                    underline=\"none\"\n                    href={`/user/${sessionUser.username}`}\n                    sx={{ width: \"100%\" }}\n                  >\n                    <MenuItem sx={{ width: \"100%\", justifyContent: \"center\" }}>\n                      Profile\n                    </MenuItem>\n                  </Link>\n\n                  <Link\n                    underline=\"none\"\n                    href=\"/settings\"\n                    sx={{ width: \"100%\" }}\n                  >\n                    <MenuItem sx={{ width: \"100%\", justifyContent: \"center\" }}>\n                      Settings\n                    </MenuItem>\n                  </Link>\n\n                  <MenuItem\n                    sx={{ width: \"100%\", justifyContent: \"center\" }}\n                    onClick={handleLogout}\n                  >\n                    Logout\n                  </MenuItem>\n                </Stack>\n              </Stack>\n            </Menu>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => setCreatePostVisible(true)}\n            >\n              <AddCircleOutlineIcon />\n              <Box>\n                <Notification\n                  open={successNotificationOpen}\n                  handleClose={closeAlertCreatePostSuccess}\n                  message={\"Post created\"}\n                />\n                <Modal\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                  open={createPostVisible}\n                  onClose={() => setCreatePostVisible(false)}\n                >\n                  <CreatePost\n                    user={sessionUser}\n                    setCreatePostVisible={setCreatePostVisible}\n                    alertCreatePostSuccess={alertCreatePostSuccess}\n                  />\n                </Modal>\n              </Box>\n            </Button>\n          </Stack>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["147"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Button,\n  CardActions,\n  Input,\n  CardMedia,\n  Typography,\n  TextField,\n  Stack,\n  Container,\n} from \"@mui/material\";\nimport { createNewPost } from \"../../store/post\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport S3FileUpload from \"react-s3\";\nimport useGlobalStyles from \"../useGlobalStyles\";\n\nconst CreatePost = ({ user, setCreatePostVisible, alertCreatePostSuccess }) => {\n  const dispatch = useDispatch();\n  const globalStyles = useGlobalStyles();\n  const [body, setBody] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n  const updateBody = (e) => setBody(e.target.value);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: user.username,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    S3FileUpload.uploadFile(selectedImage, config)\n      .then((data) => {\n        dispatch(\n          createNewPost({ content: data.location, body, tags, userId: user.id })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n          alertCreatePostSuccess();\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <form>\n      <Stack\n        padding={5}\n        spacing={3}\n        sx={{\n          width: \"500px\",\n          marginBottom: \"20px\",\n          backgroundColor: \"#ffffff\",\n          borderRadius: 1,\n        }}\n      >\n        <Container sx={{ width: \"100%\" }}>\n          {selectedImage && (\n            <CardMedia\n              sx={{ backgroundColor: \"#ffffff\", width: \"100%\" }}\n              component=\"img\"\n              image={URL.createObjectURL(selectedImage)}\n            />\n          )}\n          <label style={{ width: \"100%\" }}>\n            <Input\n              accept=\"image/*\"\n              onChange={updateSelectedImage}\n              style={{ display: \"none\", width: \"100%\" }}\n              type=\"file\"\n            />\n            {!selectedImage && (\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  height: \"200px\",\n                }}\n                component=\"span\"\n              >\n                <ImageIcon color=\"primary\" />\n              </Button>\n            )}\n          </label>\n        </Container>\n        <TextField\n          color=\"secondary\"\n          className={globalStyles.input}\n          multiline\n          onChange={updateBody}\n          value={body}\n          label=\"Body\"\n          sx={{\n            width: \"100%\",\n          }}\n        />\n        <Button type=\"submit\" variant=\"contained\" onClick={onSubmit}>\n          <SendIcon sx={{ marginRight: 1 }} />\n          <Typography>Post</Typography>\n        </Button>\n      </Stack>\n    </form>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",["148","149","150","151","152"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["153","154"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["155","156"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Container,\n  Drawer,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\n\nfunction srcset(image, size, rows = 1, cols = 1) {\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${\n      size * rows\n    }&fit=crop&auto=format&dpr=2 2x`,\n  };\n}\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(\"0\");\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value=\"0\" sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value=\"1\" sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value=\"0\">\n              <ImageList\n                variant=\"quilted\"\n                cols={2}\n                children={\n                  posts &&\n                  posts.map((post) => (\n                    <ImageListItem key={post.id}>\n                      <img {...srcset(post.content, 121)} loading=\"lazy\" />\n                    </ImageListItem>\n                  ))\n                }\n              />\n              <Stack spacing={5}></Stack>\n            </TabPanel>\n            <TabPanel value=\"1\">hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n",["157","158"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",["159","160","161","162","163"],"import {\n  Modal,\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n} from \"@mui/material\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport CreatePost from \"../CreatePost\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"../Notification\";\n\nconst QuickAction = () => {\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const closeAlertCreatePostSuccess = () => setSuccessNotificationOpen(false);\n  const alertCreatePostSuccess = () => setSuccessNotificationOpen(true);\n\n  if (sessionUser)\n    return (\n      <Box>\n        <Notification\n          open={successNotificationOpen}\n          handleClose={closeAlertCreatePostSuccess}\n          message={\"Post created\"}\n        />\n        <Modal\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          open={createPostVisible}\n          onClose={() => setCreatePostVisible(false)}\n        >\n          <CreatePost\n            user={sessionUser}\n            setCreatePostVisible={setCreatePostVisible}\n            alertCreatePostSuccess={alertCreatePostSuccess}\n          />\n        </Modal>\n      </Box>\n    );\n\n  return null;\n};\n\nexport default QuickAction;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js",["164","165","166","167","168","169","170","171","172"],"import {\n  Avatar,\n  Button,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport S3FileUpload from \"react-s3\";\nimport {\n  restoreUser,\n  updateProfilePicture,\n  updateSessionUser,\n} from \"../../store/session\";\nimport { fetch } from \"../../store/csrf\";\nimport useGlobalStyles from \"../useGlobalStyles\";\nimport UpdateBio from \"./UpdateBio\";\nimport UpdatePersonalInformation from \"./UpdatePersonalInformation\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport UpdateProfilePicture from \"./UpdateProfilePicture\";\n\nconst SettingsPage = () => {\n  const dispatch = useDispatch();\n  const globalStyles = useGlobalStyles();\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: sessionUser.username.profile_picture,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  return (\n    <Grid container marginTop=\"100px\" align=\"center\" padding=\"0px 20px\">\n      <Grid item xs={12}>\n        <Stack direction=\"column\" maxWidth=\"1200px\" align=\"start\">\n          <Box sx={{ backgroundColor: \"#333A56\", padding: \"10px 20px\" }}>\n            <Typography variant=\"h5\" color=\"secondary\">\n              Account Settings\n            </Typography>\n          </Box>\n        </Stack>\n      </Grid>\n      <Grid item xs={12}>\n        <Stack direction=\"column\" maxWidth=\"1200px\" align=\"start\">\n          <Box sx={{ border: \"5px solid #333A56\", padding: \"10px 25px\" }}>\n            <Grid container padding={2} spacing={3} gridAutoFlow={\"row\"}>\n              <Grid item xs={4}>\n                <UpdateProfilePicture\n                  sessionUser={sessionUser}\n                  updateSessionUser={updateSessionUser}\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <UpdateBio\n                  sessionUser={sessionUser}\n                  updateSessionUser={updateSessionUser}\n                />\n              </Grid>\n            </Grid>\n            <Grid container padding={2} spacing={3} gridAutoFlow={\"row\"}>\n              <Grid item xs={4}>\n                <UpdatePersonalInformation\n                  sessionUser={sessionUser}\n                  updateSessionUser={updateSessionUser}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <UpdatePassword\n                  sessionUser={sessionUser}\n                  updateSessionUser={updateSessionUser}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Stack justifyContent=\"flex-end\" height=\"100%\">\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"warning\"\n                    disabled={sessionUser.username === \"demo-user\"}\n                  >\n                    Delete Account\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </Box>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SettingsPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js",["173","174"],"import { Button, IconButton, Popover, Typography } from \"@mui/material\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport { deletePost } from \"../../../store/post\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\n\nconst DeletePost = ({ postId }) => {\n  const dispatch = useDispatch();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  const closePopover = () => setPopoverOpen(false);\n  const openPopover = (e) => {\n    setPopoverOpen(true);\n    setAnchorElement(e.currentTarget);\n  };\n\n  const deleteUserPost = async () =>\n    await dispatch(deletePost({ postId })).then(() => closePopover());\n\n  return (\n    <>\n      <Delete\n        aria-describedby=\"delete-post\"\n        variant=\"contained\"\n        onClick={openPopover}\n      />\n      <Popover\n        id=\"delete-post\"\n        open={popoverOpen}\n        onClose={closePopover}\n        anchorEl={anchorElement}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"5px\",\n          }}\n        >\n          <Button\n            color=\"warning\"\n            sx={{ mr: \"10px\" }}\n            variant=\"contained\"\n            onClick={deleteUserPost}\n          >\n            Delete\n          </Button>\n          <Button variant=\"outlined\" onClick={closePopover}>\n            Cancel\n          </Button>\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default DeletePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js",["175"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Alert,\n  FormControl,\n  Input,\n  Grid,\n  Stack,\n  TextField,\n} from \"@mui/material\";\n\nimport * as sessionActions from \"../../../store/session\";\nimport { makeStyles } from \"@mui/styles\";\nimport useGlobalStyles from \"../../useGlobalStyles\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: 305,\n    height: \"100%\",\n  },\n}));\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const globalStyles = useGlobalStyles();\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateCredential = (e) => setCredential(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    dispatch(sessionActions.login(credential, password)).catch((res) => {\n      setErrors(res.data.errors);\n    });\n  };\n\n  const demoLogin = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    let demoCredential = \"demo-user\";\n    let demoPassword = \"password\";\n    dispatch(sessionActions.login(demoCredential, demoPassword)).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Username or Email\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateCredential}\n              value={credential}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Password\"\n              className={globalStyles.input}\n              disableUnderline\n              type=\"password\"\n              onChange={updatePassword}\n              value={password}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"contained\"\n                onClick={onSubmit}\n                type=\"submit\"\n              >\n                Log in\n              </Button>\n              <Button\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"outlined\"\n                className={globalStyles.button}\n                onClick={demoLogin}\n              >\n                Demo\n              </Button>\n            </Stack>\n          </FormControl>\n        </Grid>\n        <Stack paddingTop={2} spacing={2}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"warning\">{error}</Alert>)}\n        </Stack>\n      </Grid>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js",["176"],"import {\n  Button,\n  Alert,\n  Grid,\n  FormControl,\n  Input,\n  Stack,\n  TextField,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as sessionActions from \"../../../store/session\";\nimport useGlobalStyles from \"../../useGlobalStyles\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: 305,\n    height: \"100%\",\n  },\n}));\n\nconst SignupForm = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const globalStyles = useGlobalStyles();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const updateUsername = (e) => setUsername(e.target.value);\n  const updateEmail = (e) => setEmail(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n  const updateConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n\n      const payload = {\n        email,\n        username,\n        password,\n      };\n\n      dispatch(sessionActions.signup(payload)).catch((res) => {\n        setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors([\n      \"Confirm Password field must be the same as the Password\",\n    ]);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Username\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateUsername}\n              value={username}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Email\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateEmail}\n              value={email}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Password\"\n              type=\"password\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updatePassword}\n              value={password}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <TextField\n              size=\"small\"\n              label=\"Confirm password\"\n              type=\"password\"\n              className={globalStyles.input}\n              disableUnderline\n              onChange={updateConfirmPassword}\n              value={confirmPassword}\n              required\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                loading={sessionUser}\n                variant=\"contained\"\n                onClick={onSubmit}\n                type=\"submit\"\n              >\n                Sign up\n              </Button>\n            </Stack>\n          </FormControl>\n        </Grid>\n        <Stack paddingTop={2} spacing={2}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"warning\">{error}</Alert>)}\n        </Stack>\n      </Grid>\n    </form>\n  );\n};\n\nexport default SignupForm;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js",["177","178","179","180","181","182","183"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Stack,\n  Grid,\n  useMediaQuery,\n  Zoom,\n  useScrollTrigger,\n  Toolbar,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport PostCard from \"../PostCard\";\nimport { getPosts } from \"../../store/post\";\nimport CheckoutPost from \"./CheckoutPost\";\nimport NewestMembers from \"./NewestMembers\";\nimport { useTheme } from \"@mui/styles\";\nimport { Box } from \"@mui/system\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: \"120px 0\",\n  },\n}));\n\nconst Discover = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const theme = useTheme();\n  const [loadLimit, setLoadLimit] = useState(5);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  const posts = useSelector((state) => state.posts);\n\n  const increaseLimit = () => setLoadLimit(loadLimit + 5);\n\n  useEffect(() => {\n    if (!sessionUser) return <Redirect to=\"/\" />;\n    dispatch(getPosts(loadLimit, sessionUser.id));\n  }, [dispatch, loadLimit]);\n\n  if (!sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    <>\n      <Grid className={classes.root} container direction=\"row\" spacing={2}>\n        <Grid item xs={12} md={6}>\n          {posts && (\n            <Stack alignItems={\"flex-end\"} spacing={3}>\n              {Object.keys(posts).map((idx) => {\n                return <PostCard key={idx} post={posts[idx]} />;\n              })}\n              {Object.keys(posts).length % 5 === 0 && (\n                <Button\n                  variant=\"outlined\"\n                  onClick={increaseLimit}\n                  sx={{ width: 450, marginRight: \"10px\" }}\n                >\n                  Load more\n                </Button>\n              )}\n            </Stack>\n          )}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Stack spacing={3} className={classes.wigits}>\n            <NewestMembers />\n            <CheckoutPost />\n          </Stack>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Discover;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js",["184","185"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js",["186","187"],"import {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getNewestUsers } from \"../../store/discover\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"500px\",\n  },\n  cardHeader: {\n    backgroundColor: \"#333A56\",\n  },\n}));\n\nconst NewestMembers = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const newestUsers = useSelector((state) => state.discover.newestUsers);\n\n  useEffect(() => dispatch(getNewestUsers()), []);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        className={classes.cardHeader}\n        title={\n          <Typography fontWeight=\"bold\" color=\"#ffffff\">\n            Our newest members\n          </Typography>\n        }\n      />\n      <CardContent sx={{ backgroundColor: \"#333A56\" }}>\n        <Stack spacing={1}>\n          {newestUsers &&\n            newestUsers.map((newestUser) => (\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                key={newestUser.id}\n                sx={{ justifyContent: \"start\" }}\n                onClick={() => history.push(`/user/${newestUser.username}`)}\n              >\n                <Avatar\n                  variant=\"square\"\n                  src={newestUser.profilePicture}\n                  sx={{ marginRight: 2 }}\n                />\n                <Typography variant=\"subtitle2\">\n                  {newestUser.username}\n                </Typography>\n              </Button>\n            ))}\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default NewestMembers;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/EditPost/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUs/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Profile/index.js",["188","189","190","191","192","193","194","195"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateBio.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePersonalInformation.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdatePassword.js",["196"],"import {\n  Button,\n  FormControl,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useGlobalStyles from \"../useGlobalStyles\";\n\nconst UpdatePassword = ({ sessionUser, updateSessionUser }) => {\n  const globalStyles = useGlobalStyles();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const updatePassword = (e) => setPassword(e.target.value);\n  const updateConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      return dispatch(updateSessionUser(sessionUser.id, { password }));\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Stack>\n        <Typography color=\"primary\" variant=\"h6\" gutterBottom={2}>\n          Password\n        </Typography>\n        <Stack direction=\"column\" spacing={2}>\n          <TextField\n            type=\"password\"\n            error={confirmPassword && password !== confirmPassword}\n            label=\"New password\"\n            onChange={updatePassword}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n          <TextField\n            type=\"password\"\n            error={password !== confirmPassword}\n            label=\"Confirm new password\"\n            onChange={updateConfirmPassword}\n            size=\"small\"\n            disableUnderline\n            className={globalStyles.input}\n          />\n        </Stack>\n        <Stack padding=\"10px 0px\">\n          <Button\n            type=\"submit\"\n            size=\"small\"\n            variant=\"contained\"\n            disabled={!password && !confirmPassword}\n          >\n            Update\n          </Button>\n        </Stack>\n      </Stack>\n    </form>\n  );\n};\n\nexport default UpdatePassword;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/UpdateProfilePicture.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":11,"column":15,"nodeType":"203","messageId":"204","endLine":11,"endColumn":26},{"ruleId":"201","severity":1,"message":"205","line":14,"column":18,"nodeType":"203","messageId":"204","endLine":14,"endColumn":25},{"ruleId":"201","severity":1,"message":"206","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":13},{"ruleId":"201","severity":1,"message":"207","line":15,"column":3,"nodeType":"203","messageId":"204","endLine":15,"endColumn":9},{"ruleId":"201","severity":1,"message":"208","line":47,"column":10,"nodeType":"203","messageId":"204","endLine":47,"endColumn":19},{"ruleId":"201","severity":1,"message":"209","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":14},{"ruleId":"201","severity":1,"message":"210","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":9,"column":3,"nodeType":"203","messageId":"204","endLine":9,"endColumn":12},{"ruleId":"201","severity":1,"message":"212","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":7},{"ruleId":"201","severity":1,"message":"213","line":47,"column":10,"nodeType":"203","messageId":"204","endLine":47,"endColumn":15},{"ruleId":"201","severity":1,"message":"214","line":47,"column":17,"nodeType":"203","messageId":"204","endLine":47,"endColumn":25},{"ruleId":"197","replacedBy":"215"},{"ruleId":"199","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":38,"column":6,"nodeType":"219","endLine":38,"endColumn":25,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":91,"column":23,"nodeType":"223","endLine":91,"endColumn":76},{"ruleId":"197","replacedBy":"224"},{"ruleId":"199","replacedBy":"225"},{"ruleId":"201","severity":1,"message":"226","line":3,"column":3,"nodeType":"203","messageId":"204","endLine":3,"endColumn":12},{"ruleId":"201","severity":1,"message":"227","line":4,"column":3,"nodeType":"203","messageId":"204","endLine":4,"endColumn":18},{"ruleId":"201","severity":1,"message":"228","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":16},{"ruleId":"201","severity":1,"message":"229","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":18},{"ruleId":"201","severity":1,"message":"230","line":11,"column":10,"nodeType":"203","messageId":"204","endLine":11,"endColumn":21},{"ruleId":"201","severity":1,"message":"207","line":2,"column":3,"nodeType":"203","messageId":"204","endLine":2,"endColumn":9},{"ruleId":"201","severity":1,"message":"231","line":6,"column":3,"nodeType":"203","messageId":"204","endLine":6,"endColumn":12},{"ruleId":"201","severity":1,"message":"232","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":20},{"ruleId":"201","severity":1,"message":"233","line":13,"column":3,"nodeType":"203","messageId":"204","endLine":13,"endColumn":14},{"ruleId":"201","severity":1,"message":"234","line":14,"column":3,"nodeType":"203","messageId":"204","endLine":14,"endColumn":23},{"ruleId":"201","severity":1,"message":"235","line":17,"column":10,"nodeType":"203","messageId":"204","endLine":17,"endColumn":15},{"ruleId":"201","severity":1,"message":"236","line":25,"column":9,"nodeType":"203","messageId":"204","endLine":25,"endColumn":17},{"ruleId":"201","severity":1,"message":"237","line":26,"column":9,"nodeType":"203","messageId":"204","endLine":26,"endColumn":21},{"ruleId":"201","severity":1,"message":"238","line":29,"column":9,"nodeType":"203","messageId":"204","endLine":29,"endColumn":15},{"ruleId":"201","severity":1,"message":"206","line":1,"column":18,"nodeType":"203","messageId":"204","endLine":1,"endColumn":28},{"ruleId":"201","severity":1,"message":"239","line":1,"column":39,"nodeType":"203","messageId":"204","endLine":1,"endColumn":49},{"ruleId":"201","severity":1,"message":"240","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":8},{"ruleId":"201","severity":1,"message":"240","line":6,"column":3,"nodeType":"203","messageId":"204","endLine":6,"endColumn":8},{"ruleId":"201","severity":1,"message":"241","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":16},{"ruleId":"201","severity":1,"message":"242","line":9,"column":3,"nodeType":"203","messageId":"204","endLine":9,"endColumn":7},{"ruleId":"201","severity":1,"message":"243","line":10,"column":3,"nodeType":"203","messageId":"204","endLine":10,"endColumn":19},{"ruleId":"201","severity":1,"message":"205","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":10},{"ruleId":"201","severity":1,"message":"244","line":19,"column":10,"nodeType":"203","messageId":"204","endLine":19,"endColumn":13},{"ruleId":"201","severity":1,"message":"245","line":30,"column":9,"nodeType":"203","messageId":"204","endLine":30,"endColumn":14},{"ruleId":"217","severity":1,"message":"246","line":41,"column":6,"nodeType":"219","endLine":41,"endColumn":27,"suggestions":"247"},{"ruleId":"201","severity":1,"message":"248","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":12},{"ruleId":"217","severity":1,"message":"249","line":31,"column":6,"nodeType":"219","endLine":31,"endColumn":8,"suggestions":"250"},{"ruleId":"201","severity":1,"message":"251","line":7,"column":3,"nodeType":"203","messageId":"204","endLine":7,"endColumn":10},{"ruleId":"217","severity":1,"message":"249","line":34,"column":47,"nodeType":"219","endLine":34,"endColumn":49,"suggestions":"252"},{"ruleId":"201","severity":1,"message":"253","line":3,"column":3,"nodeType":"203","messageId":"204","endLine":3,"endColumn":7},{"ruleId":"201","severity":1,"message":"254","line":4,"column":3,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"255","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":13},{"ruleId":"201","severity":1,"message":"251","line":7,"column":3,"nodeType":"203","messageId":"204","endLine":7,"endColumn":10},{"ruleId":"201","severity":1,"message":"256","line":10,"column":3,"nodeType":"203","messageId":"204","endLine":10,"endColumn":11},{"ruleId":"201","severity":1,"message":"244","line":15,"column":10,"nodeType":"203","messageId":"204","endLine":15,"endColumn":13},{"ruleId":"201","severity":1,"message":"257","line":34,"column":9,"nodeType":"203","messageId":"204","endLine":34,"endColumn":20},{"ruleId":"217","severity":1,"message":"258","line":42,"column":6,"nodeType":"219","endLine":42,"endColumn":8,"suggestions":"259"},{"ruleId":"201","severity":1,"message":"260","line":3,"column":3,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'createTheme' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Avatar' is defined but never used.","'ScrollTop' is defined but never used.","'CardActions' is defined but never used.","'CardActionArea' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'liked' is assigned a value but never used.","'setLiked' is assigned a value but never used.",["261"],["262"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["263"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["261"],["262"],"'SpeedDial' is defined but never used.","'SpeedDialAction' is defined but never used.","'SpeedDialIcon' is defined but never used.","'CreateIcon' is defined but never used.","'useDispatch' is defined but never used.","'TextField' is defined but never used.","'S3FileUpload' is defined but never used.","'restoreUser' is defined but never used.","'updateProfilePicture' is defined but never used.","'fetch' is defined but never used.","'dispatch' is assigned a value but never used.","'globalStyles' is assigned a value but never used.","'config' is assigned a value but never used.","'Typography' is defined but never used.","'Input' is defined but never used.","'useMediaQuery' is defined but never used.","'Zoom' is defined but never used.","'useScrollTrigger' is defined but never used.","'Box' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.",["264"],"'CardMedia' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["265"],"'Divider' is defined but never used.",["266"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Skeleton' is defined but never used.","'sessionUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["267"],"'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [userId]",{"range":"284","text":"285"},[1088,1107],"[dispatch, profileDrawerOpen, userId]",[1106,1127],"[dispatch, loadLimit, sessionUser]",[677,679],"[dispatch]",[742,744],[949,951],"[userId]"]