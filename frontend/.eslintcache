[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/AccountSettings.js":"21","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js":"22","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js":"23","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js":"24","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js":"25","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js":"26","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js":"27"},{"size":1391,"mtime":1639702167706,"results":"28","hashOfConfig":"29"},{"size":1308,"mtime":1639702812432,"results":"30","hashOfConfig":"29"},{"size":787,"mtime":1633891798490,"results":"31","hashOfConfig":"29"},{"size":2290,"mtime":1634334819756,"results":"32","hashOfConfig":"29"},{"size":2520,"mtime":1634681119199,"results":"33","hashOfConfig":"29"},{"size":857,"mtime":1634582668536,"results":"34","hashOfConfig":"29"},{"size":625,"mtime":1634334714253,"results":"35","hashOfConfig":"29"},{"size":2366,"mtime":1639702747450,"results":"36","hashOfConfig":"29"},{"size":1476,"mtime":1639699601195,"results":"37","hashOfConfig":"29"},{"size":1396,"mtime":1634585569237,"results":"38","hashOfConfig":"29"},{"size":2799,"mtime":1634332987429,"results":"39","hashOfConfig":"29"},{"size":2701,"mtime":1634679175966,"results":"40","hashOfConfig":"29"},{"size":323,"mtime":1633891798486,"results":"41","hashOfConfig":"29"},{"size":3043,"mtime":1634681033861,"results":"42","hashOfConfig":"29"},{"size":1719,"mtime":1634680882459,"results":"43","hashOfConfig":"29"},{"size":1370,"mtime":1634169869005,"results":"44","hashOfConfig":"29"},{"size":333,"mtime":1634169802572,"results":"45","hashOfConfig":"29"},{"size":2735,"mtime":1637014647292,"results":"46","hashOfConfig":"29"},{"size":1538,"mtime":1634679211704,"results":"47","hashOfConfig":"29"},{"size":1169,"mtime":1634584841431,"results":"48","hashOfConfig":"29"},{"size":2369,"mtime":1637014628831,"results":"49","hashOfConfig":"29"},{"size":434,"mtime":1639698225841,"results":"50","hashOfConfig":"29"},{"size":3277,"mtime":1639699584534,"results":"51","hashOfConfig":"29"},{"size":3906,"mtime":1639699576020,"results":"52","hashOfConfig":"29"},{"size":1814,"mtime":1639703930035,"results":"53","hashOfConfig":"29"},{"size":1088,"mtime":1634677869269,"results":"54","hashOfConfig":"29"},{"size":1571,"mtime":1639704802110,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"sdhkcj",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["121","122"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["123"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"./components/Navigation\";\nimport * as sessionActions from \"./store/session\";\nimport WelcomePage from \"./components/WelcomePage\";\nimport AboutUsPage from \"./components/AboutUsPage\";\nimport QuickAction from \"./components/QuickAction\";\nimport SettingsPage from \"./components/SettingsPage\";\nimport { createTheme } from \"@mui/system\";\nimport Discover from \"./components/Discover\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  return (\n    isLoaded && (\n      <>\n        {sessionUser && <Navigation />}\n        <QuickAction />\n        <Switch>\n          <Route exact path=\"/\" component={WelcomePage} />\n          <Route path=\"/about\" component={AboutUsPage} />\n          <Route exact path=\"/discover\" component={Discover} />\n          <Route exact path=\"/settings\" component={SettingsPage} />\n          <Route exact path=\"/results\" />\n        </Switch>\n      </>\n    )\n  );\n}\n\nexport default App;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["124","125"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Card,\n  Button,\n  TextField,\n  CardContent,\n  CardActions,\n  IconButton,\n  Input,\n  CardMedia,\n} from \"@mui/material\";\nimport { createNewPost } from \"../../store/post\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nimport S3FileUpload from \"react-s3\";\n\nconst CreatePost = ({ user, setCreatePostVisible, alertCreatePostSuccess }) => {\n  const dispatch = useDispatch();\n\n  const [body, setBody] = useState(\"\");\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n  const updateBody = (e) => setBody(e.target.value);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: user.username,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const tags = body.match(/#[A-Za-z0-9]*/g);\n\n    S3FileUpload.uploadFile(selectedImage, config)\n      .then((data) => {\n        dispatch(\n          createNewPost({ content: data.location, body, tags, userId: user.id })\n        ).then(() => {\n          setSelectedImage(null);\n          setBody(\"\");\n          setCreatePostVisible(false);\n          alertCreatePostSuccess();\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Card className=\"CreatePost\" sx={{ width: \"500px\", marginBottom: \"20px\" }}>\n      <form>\n        <CardContent>\n          {selectedImage && (\n            <CardMedia\n              component=\"img\"\n              image={URL.createObjectURL(selectedImage)}\n            />\n          )}\n          <label>\n            <Input\n              accept=\"image/*\"\n              onChange={updateSelectedImage}\n              style={{ display: \"none\" }}\n              type=\"file\"\n            />\n            {!selectedImage && (\n              <Button\n                sx={{\n                  width: \"100%\",\n                  minHeight: \"200px\",\n                  border: \"1px slategray dotted\",\n                }}\n                component=\"span\"\n              >\n                Upload\n              </Button>\n            )}\n          </label>\n          <TextField\n            size=\"small\"\n            onChange={updateBody}\n            value={body}\n            label=\"Body\"\n            multiline\n            sx={{ width: \"100%\", marginTop: \"10px\" }}\n          />\n        </CardContent>\n        <CardActions sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton>\n            <SendIcon onClick={onSubmit} />\n          </IconButton>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nexport default CreatePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["126","127"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["128","129"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Container,\n  Drawer,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Tab,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getUserProfile } from \"../../store/user\";\n\nfunction srcset(image, size, rows = 1, cols = 1) {\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${\n      size * rows\n    }&fit=crop&auto=format&dpr=2 2x`,\n  };\n}\nconst ProfileDrawer = ({ userId, profileDrawerOpen, closeProfileDrawer }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.profile_user.user);\n  const posts = useSelector((state) => state.user.profile_user.posts);\n  const [tab, setTab] = useState(\"0\");\n\n  const handleChange = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  useEffect(() => {\n    profileDrawerOpen && dispatch(getUserProfile(userId));\n  }, [profileDrawerOpen]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={profileDrawerOpen}\n      onClose={closeProfileDrawer}\n    >\n      <Container\n        className=\"ProfileDrawer\"\n        sx={{\n          width: \"500px\",\n          margin: \"0px -24px\",\n          backgroundColor: \"#3c1f41\",\n          minHeight: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <div className=\"ProfileDrawerHeader\">\n          <Avatar\n            sx={{\n              width: \"130px\",\n              height: \"130px\",\n              display: \"relative\",\n              bottom: \"-40px\",\n            }}\n            src={user && user.profilePicture}\n          />\n        </div>\n        <div className=\"ProfileDrawerBody\">\n          <div className=\"ProfileUserInfo\">\n            <Typography variant=\"h4\" color=\"white\">\n              {user && user.username}\n            </Typography>\n            <Typography variant=\"p\" color=\"white\">\n              {user && user.bio}\n            </Typography>\n          </div>\n          <TabContext value={tab}>\n            <Box>\n              <TabList onChange={handleChange}>\n                <Tab label=\"POSTS\" value=\"0\" sx={{ color: \"white\" }} />\n                <Tab label=\"PINNED\" value=\"1\" sx={{ color: \"white\" }} />\n              </TabList>\n            </Box>\n            <TabPanel value=\"0\">\n              <ImageList\n                variant=\"quilted\"\n                cols={2}\n                children={\n                  posts &&\n                  posts.map((post) => (\n                    <ImageListItem key={post.id}>\n                      <img {...srcset(post.content, 121)} loading=\"lazy\" />\n                    </ImageListItem>\n                  ))\n                }\n              />\n              <Stack spacing={5}></Stack>\n            </TabPanel>\n            <TabPanel value=\"1\">hi again</TabPanel>\n          </TabContext>\n        </div>\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default ProfileDrawer;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",["130","131","132"],"import {\n  Modal,\n  SpeedDial,\n  SpeedDialAction,\n  SpeedDialIcon,\n} from \"@mui/material\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport CreatePost from \"../CreatePost\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"../Notification\";\n\nconst QuickAction = () => {\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  const [successNotificationOpen, setSuccessNotificationOpen] = useState(false);\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const closeAlertCreatePostSuccess = () => setSuccessNotificationOpen(false);\n  const alertCreatePostSuccess = () => setSuccessNotificationOpen(true);\n\n  if (sessionUser)\n    return (\n      <Box>\n        <Notification\n          open={successNotificationOpen}\n          handleClose={closeAlertCreatePostSuccess}\n          message={\"Post created\"}\n        />\n        <Modal\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          open={createPostVisible}\n          onClose={() => setCreatePostVisible(false)}\n        >\n          <CreatePost\n            user={sessionUser}\n            setCreatePostVisible={setCreatePostVisible}\n            alertCreatePostSuccess={alertCreatePostSuccess}\n          />\n        </Modal>\n        <SpeedDial\n          ariaLabel=\"Hello\"\n          sx={{\n            position: \"fixed\",\n            bottom: 30,\n            right: 30,\n          }}\n          icon={<CreateIcon />}\n          onClick={() => setCreatePostVisible(true)}\n        />\n      </Box>\n    );\n\n  return null;\n};\n\nexport default QuickAction;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js",["133","134"],"import { FormControl, IconButton, TextField } from \"@mui/material\";\nimport ArrowForwardTwoToneIcon from \"@mui/icons-material/ArrowForwardTwoTone\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePost } from \"../../store/post\";\nimport Notification from \"../Notification\";\n\nconst EditPost = ({ post, closeEditOpen, alertUpdateBodySuccess }) => {\n  const dispatch = useDispatch();\n  const [body, setBody] = useState(post.body);\n\n  const updateBody = (e) => setBody(e.target.value);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dispatch(updatePost({ postId: post.id, body }))\n      .then(() => alertUpdateBodySuccess())\n      .then(() => closeEditOpen())\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <form\n      style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n      className=\"EditPost\"\n      onSubmit={onSubmit}\n    >\n      <TextField\n        placeholder=\"Edit body\"\n        id=\"edit-post-input\"\n        fullWidth\n        multiline\n        color=\"info\"\n        value={body}\n        onChange={updateBody}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <IconButton type=\"submit\">\n          <ArrowForwardTwoToneIcon />\n        </IconButton>\n      </div>\n    </form>\n  );\n};\n\nexport default EditPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/index.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import {\n  Avatar,\n  Button,\n  Container,\n  Divider,\n  IconButton,\n  Input,\n  InputLabel,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n  Paper,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport AccountIcon from \"@mui/icons-material/Person\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport S3FileUpload from \"react-s3\";\nimport { restoreUser, updateProfilePicture } from \"../../store/session\";\nimport \"./index.css\";\nimport AccountSettings from \"./AccountSettings\";\n\nconst SettingsPage = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [settingsView, setSettingsView] = useState(0);\n  const updateSelectedImage = (e) => setSelectedImage(e.target.files[0]);\n\n  const updateSettingsView = (viewNumber) => setSettingsView(viewNumber);\n\n  const config = {\n    bucketName: \"rumblr-app\",\n    dirName: sessionUser.username.profile_picture,\n    region: \"us-east-2\",\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_ID,\n  };\n\n  const updateProfilePic = async (e) => {\n    e.preventDefault();\n\n    await S3FileUpload.uploadFile(e.target.files[0], config)\n      .then((data) => {\n        dispatch(updateProfilePicture(sessionUser.id, data.location));\n      })\n      .then(() => restoreUser());\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <Typography letterSpacing={2} color=\"white\" padding={\"10px 0px 50px 0px\"}>\n        {sessionUser.username} - {sessionUser.email}\n      </Typography>\n      <AccountSettings\n        sessionUser={sessionUser}\n        updateProfilePic={updateProfilePic}\n        selectedImage={selectedImage}\n      />\n      <br />\n      <Box sx={{ width: \"100%\" }}>\n        <Box>\n          <InputLabel sx={{ color: \"white\" }}>New Password</InputLabel>\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            color=\"secondary\"\n            sx={{ background: \"white\", borderRadius: \"0.5em\" }}\n          />\n        </Box>\n        <br />\n        <Box>\n          <InputLabel sx={{ color: \"white\" }}>Confirm Password</InputLabel>\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            color=\"secondary\"\n            sx={{ background: \"white\", borderRadius: \"0.5em\" }}\n          />\n        </Box>\n        <br />\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button variant=\"outlined\">Change Password</Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default SettingsPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/DeletePost/index.js",["150","151"],"import { Button, IconButton, Popover, Typography } from \"@mui/material\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport { deletePost } from \"../../../store/post\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\n\nconst DeletePost = ({ postId }) => {\n  const dispatch = useDispatch();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  const closePopover = () => setPopoverOpen(false);\n  const openPopover = (e) => {\n    setPopoverOpen(true);\n    setAnchorElement(e.currentTarget);\n  };\n\n  const deleteUserPost = async () =>\n    await dispatch(deletePost({ postId })).then(() => closePopover());\n\n  return (\n    <>\n      <Delete\n        aria-describedby=\"delete-post\"\n        variant=\"contained\"\n        onClick={openPopover}\n      />\n      <Popover\n        id=\"delete-post\"\n        open={popoverOpen}\n        onClose={closePopover}\n        anchorEl={anchorElement}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"5px\",\n          }}\n        >\n          <Button\n            sx={{ backgroundColor: \"red\", mr: \"10px\" }}\n            variant=\"contained\"\n            onClick={deleteUserPost}\n          >\n            Delete\n          </Button>\n          <Button variant=\"outlined\" onClick={closePopover}>\n            Cancel\n          </Button>\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default DeletePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/discover.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SettingsPage/AccountSettings.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/useGlobalStyles/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/LoginForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/SignupForm/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/index.js",["152"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Stack, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport PostCard from \"../PostCard\";\nimport { getPosts } from \"../../store/post\";\nimport CheckoutPost from \"./CheckoutPost\";\nimport NewestMembers from \"./NewestMembers\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: \"120px 0\",\n  },\n}));\n\nconst Discover = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [loadLimit, setLoadLimit] = useState(5);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  const posts = useSelector((state) => state.posts);\n\n  const increaseLimit = () => setLoadLimit(loadLimit + 5);\n\n  useEffect(() => {\n    if (!sessionUser) return <Redirect to=\"/\" />;\n    dispatch(getPosts(loadLimit, sessionUser.id));\n  }, [dispatch, loadLimit]);\n\n  if (!sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    <Grid className={classes.root} container direction=\"row\">\n      <Grid item xs={7} paddingRight={2} height=\"85vh\" overflow=\"scroll\">\n        {posts && (\n          <Stack spacing={4} alignItems=\"flex-end\">\n            {Object.keys(posts).map((idx) => {\n              return <PostCard key={idx} post={posts[idx]} />;\n            })}\n            {Object.keys(posts).length % 5 === 0 && (\n              <Button variant=\"contained\" onClick={increaseLimit}>\n                Load more\n              </Button>\n            )}\n          </Stack>\n        )}\n      </Grid>\n      <Grid item xs={5} paddingLeft={2}>\n        <Stack spacing={4} alignItems=\"flex-start\">\n          <NewestMembers />\n          <CheckoutPost />\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Discover;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/CheckoutPost.js",["153"],"import {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getRandomPost } from \"../../store/discover\";\n\nconst CheckoutPost = () => {\n  const dispatch = useDispatch();\n\n  const randomPost = useSelector((state) => state.discover.randomPost);\n\n  useEffect(() => {\n    dispatch(getRandomPost());\n  }, []);\n\n  if (randomPost)\n    return (\n      <div>\n        <Card\n          className=\"discover-page-side-post\"\n          variant=\"outlined\"\n          sx={{ borderRadius: \"0.1em\" }}\n        >\n          <CardHeader\n            align=\"center\"\n            title={\n              <Typography>\n                Check out this post by {randomPost.User.username}\n              </Typography>\n            }\n          />\n          <CardMedia component=\"img\" src={randomPost.content} />\n          <CardContent>{randomPost.body}</CardContent>\n        </Card>\n      </div>\n    );\n  else return <CircularProgress />;\n};\n\nexport default CheckoutPost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Discover/NewestMembers.js",["154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":21},{"ruleId":"159","severity":1,"message":"163","line":22,"column":10,"nodeType":"161","messageId":"162","endLine":22,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":22,"column":26,"nodeType":"161","messageId":"162","endLine":22,"endColumn":43},{"ruleId":"155","replacedBy":"165"},{"ruleId":"157","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":38,"column":6,"nodeType":"169","endLine":38,"endColumn":25,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":91,"column":23,"nodeType":"173","endLine":91,"endColumn":76},{"ruleId":"159","severity":1,"message":"174","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":18},{"ruleId":"159","severity":1,"message":"175","line":5,"column":3,"nodeType":"161","messageId":"162","endLine":5,"endColumn":16},{"ruleId":"159","severity":1,"message":"176","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":21},{"ruleId":"159","severity":1,"message":"177","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":21},{"ruleId":"159","severity":1,"message":"178","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":20},{"ruleId":"159","severity":1,"message":"179","line":2,"column":3,"nodeType":"161","messageId":"162","endLine":2,"endColumn":9},{"ruleId":"159","severity":1,"message":"180","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":12},{"ruleId":"159","severity":1,"message":"181","line":5,"column":3,"nodeType":"161","messageId":"162","endLine":5,"endColumn":10},{"ruleId":"159","severity":1,"message":"182","line":6,"column":3,"nodeType":"161","messageId":"162","endLine":6,"endColumn":13},{"ruleId":"159","severity":1,"message":"183","line":7,"column":3,"nodeType":"161","messageId":"162","endLine":7,"endColumn":8},{"ruleId":"159","severity":1,"message":"184","line":9,"column":3,"nodeType":"161","messageId":"162","endLine":9,"endColumn":15},{"ruleId":"159","severity":1,"message":"185","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":15},{"ruleId":"159","severity":1,"message":"186","line":11,"column":3,"nodeType":"161","messageId":"162","endLine":11,"endColumn":11},{"ruleId":"159","severity":1,"message":"187","line":12,"column":3,"nodeType":"161","messageId":"162","endLine":12,"endColumn":11},{"ruleId":"159","severity":1,"message":"188","line":13,"column":3,"nodeType":"161","messageId":"162","endLine":13,"endColumn":8},{"ruleId":"159","severity":1,"message":"189","line":14,"column":3,"nodeType":"161","messageId":"162","endLine":14,"endColumn":8},{"ruleId":"159","severity":1,"message":"190","line":18,"column":8,"nodeType":"161","messageId":"162","endLine":18,"endColumn":19},{"ruleId":"159","severity":1,"message":"191","line":31,"column":10,"nodeType":"161","messageId":"162","endLine":31,"endColumn":22},{"ruleId":"159","severity":1,"message":"192","line":32,"column":9,"nodeType":"161","messageId":"162","endLine":32,"endColumn":28},{"ruleId":"159","severity":1,"message":"193","line":34,"column":9,"nodeType":"161","messageId":"162","endLine":34,"endColumn":27},{"ruleId":"159","severity":1,"message":"182","line":1,"column":18,"nodeType":"161","messageId":"162","endLine":1,"endColumn":28},{"ruleId":"159","severity":1,"message":"194","line":1,"column":39,"nodeType":"161","messageId":"162","endLine":1,"endColumn":49},{"ruleId":"167","severity":1,"message":"195","line":30,"column":6,"nodeType":"169","endLine":30,"endColumn":27,"suggestions":"196"},{"ruleId":"167","severity":1,"message":"197","line":21,"column":6,"nodeType":"169","endLine":21,"endColumn":8,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"197","line":32,"column":47,"nodeType":"169","endLine":32,"endColumn":49,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'createTheme' is defined but never used.","Identifier","unusedVar","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.",["200"],["201"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["202"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SpeedDialAction' is defined but never used.","'SpeedDialIcon' is defined but never used.","'useDispatch' is defined but never used.","'FormControl' is defined but never used.","'Notification' is defined but never used.","'Avatar' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Input' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'Paper' is defined but never used.","'Stack' is defined but never used.","'AccountIcon' is defined but never used.","'settingsView' is assigned a value but never used.","'updateSelectedImage' is assigned a value but never used.","'updateSettingsView' is assigned a value but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["204"],["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"213","text":"214"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},{"range":"219","text":"218"},[1088,1107],"[dispatch, profileDrawerOpen, userId]",[940,961],"[dispatch, loadLimit, sessionUser]",[457,459],"[dispatch]",[663,665]]