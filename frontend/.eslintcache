[{"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js":"1","/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js":"2","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js":"3","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js":"4","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js":"5","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js":"6","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js":"7","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js":"8","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js":"9","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js":"10","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js":"11","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js":"12","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js":"13","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js":"14","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js":"15","/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js":"16","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js":"17","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js":"18","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DeletePost/index.js":"19","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js":"20","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js":"21"},{"size":1042,"mtime":1633891798490,"results":"22","hashOfConfig":"23"},{"size":1366,"mtime":1633980779503,"results":"24","hashOfConfig":"23"},{"size":787,"mtime":1633891798490,"results":"25","hashOfConfig":"23"},{"size":1691,"mtime":1633895346928,"results":"26","hashOfConfig":"23"},{"size":2558,"mtime":1634168567949,"results":"27","hashOfConfig":"23"},{"size":786,"mtime":1633986285566,"results":"28","hashOfConfig":"23"},{"size":611,"mtime":1633891798491,"results":"29","hashOfConfig":"23"},{"size":2862,"mtime":1633891798487,"results":"30","hashOfConfig":"23"},{"size":1074,"mtime":1633986385578,"results":"31","hashOfConfig":"23"},{"size":2849,"mtime":1633986847609,"results":"32","hashOfConfig":"23"},{"size":863,"mtime":1633891798490,"results":"33","hashOfConfig":"23"},{"size":3173,"mtime":1633891798488,"results":"34","hashOfConfig":"23"},{"size":1330,"mtime":1633970168444,"results":"35","hashOfConfig":"23"},{"size":2799,"mtime":1634170187604,"results":"36","hashOfConfig":"23"},{"size":3003,"mtime":1634169887648,"results":"37","hashOfConfig":"23"},{"size":323,"mtime":1633891798486,"results":"38","hashOfConfig":"23"},{"size":2949,"mtime":1634170065434,"results":"39","hashOfConfig":"23"},{"size":2139,"mtime":1634170198035,"results":"40","hashOfConfig":"23"},{"size":1706,"mtime":1633988676702,"results":"41","hashOfConfig":"23"},{"size":1370,"mtime":1634169869005,"results":"42","hashOfConfig":"23"},{"size":333,"mtime":1634169802572,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"sdhkcj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mustafamousa/Projects/Rumblr/frontend/src/index.js",[],["94","95"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/App.js",["96"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"./components/Navigation\";\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport DiscoverPage from \"./components/DiscoverPage\";\nimport * as sessionActions from \"./store/session\";\nimport WelcomePage from \"./components/WelcomePage\";\nimport AboutUsPage from \"./components/AboutUsPage\";\nimport QuickAction from \"./components/QuickAction\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  const user = useSelector((state) => state.session.user);\n\n  return (\n    <>\n      <Navigation />\n      <QuickAction />\n\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/about\" component={AboutUsPage} />\n          <Route exact path=\"/\" component={WelcomePage} />\n          <Route exact path=\"/discover\" component={DiscoverPage} />\n          <Route exact path=\"/results\" />\n          <Route path=\"/login\" component={LoginFormPage} />\n          <Route path=\"/signup\" component={SignupFormPage} />\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/store/csrf.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/session.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/post.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/store/user.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/LoginFormPage/index.js",["97","98","99"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  CardHeader,\n  Typography,\n  CardActions,\n  Input,\n  Avatar,\n  Alert,\n} from \"@mui/material\";\nimport \"./login.css\";\n\nimport * as sessionActions from \"../../store/session\";\nimport { Box } from \"@mui/system\";\n\nconst LoginFormPage = ({ switchToSignup }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateCredential = (e) => setCredential(e.target.value);\n  const updatePassword = (e) => setPassword(e.target.value);\n\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    dispatch(sessionActions.login(credential, password)).catch((res) => {\n      setErrors(res.data.errors);\n    });\n\n    // return history.push(\"/discover\");\n  };\n\n  const demoLogin = async (e) => {\n    e.preventDefault();\n    setErrors([]);\n    let demoCredential = \"demo-user\";\n    let demoPassword = \"password\";\n    dispatch(sessionActions.login(demoCredential, demoPassword)).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n\n    // return history.push(\"/discover\");\n  };\n\n  return (\n    <Card className=\"LoginFormPage\">\n      <CardHeader\n        align=\"center\"\n        subheader=\"Log in\"\n        title={\n          <Typography\n            sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n          >\n            Rumblr\n          </Typography>\n        }\n      />\n      <CardContent>\n        <form className=\"LoginForm\">\n          <TextField\n            id=\"input\"\n            type=\"text\"\n            onChange={updateCredential}\n            value={credential}\n            label=\"username/email\"\n            required\n          />\n          <br />\n          <TextField\n            id=\"input\"\n            type=\"password\"\n            onChange={updatePassword}\n            value={password}\n            label=\"password\"\n            required\n          />\n        </form>\n        <Box sx={{ paddingTop: \"20px\" }}>\n          {errors &&\n            errors.map((error) => <Alert severity=\"error\">{error}</Alert>)}\n        </Box>\n      </CardContent>\n      <CardActions className=\"LoginFormFooter\">\n        <div>\n          <Button onClick={switchToSignup}>Switch to sign up</Button>\n        </div>\n        <div>\n          <Button onClick={onSubmit}>Log in</Button>\n          <Button onClick={demoLogin}>Demo</Button>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default LoginFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DiscoverPage/index.js",["100"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Stack } from \"@mui/material\";\nimport \"./index.css\";\nimport PostCard from \"../PostCard\";\nimport { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../store/post\";\n\nconst FeedPage = () => {\n  const dispatch = useDispatch();\n  const [loadLimit, setLoadLimit] = useState(5);\n  const sessionUser = useSelector((state) => state.session.user);\n  const posts = useSelector((state) => state.posts);\n\n  const increaseLimit = () => setLoadLimit(loadLimit + 5);\n\n  useEffect(() => {\n    dispatch(getPosts(loadLimit, sessionUser.id));\n  }, [dispatch, loadLimit]);\n\n  if (!sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    posts && (\n      <Stack className=\"DiscoverPage\" spacing={5}>\n        {Object.keys(posts).map((idx) => {\n          return <PostCard post={posts[idx]} />;\n        })}\n        <Button sx={{ color: \"white\" }} onClick={increaseLimit}>\n          Load more\n        </Button>\n      </Stack>\n    )\n  );\n};\n\nexport default FeedPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Navigation/index.js",["101","102","103","104","105","106"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport {\n  AppBar,\n  Grid,\n  Toolbar,\n  Typography,\n  Button,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport ExploreIcon from \"@mui/icons-material/Explore\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\nimport * as sessionActions from \"../../store/session\";\n\nimport \"./index.css\";\n\nconst styles = {\n  toolbar: {\n    backgroundColor: \"#301934\",\n  },\n};\n\nconst Navigation = ({ classes }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const sessionUser = useSelector((state) => state.session.user);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      sx={{\n        borderBottom: \"1px solid #3c1f41\",\n        boxShadow: \"none\",\n      }}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Grid container>\n          <Grid item xs={6} className=\"NavigationLogoContainer\">\n            <Typography variant=\"h5\" fontWeight=\"bolder\" color=\"white\">\n              Rumblr\n            </Typography>\n          </Grid>\n          <Grid item xs={6} className=\"NavigationIconContainer\">\n            {sessionUser && (\n              <>\n                <NavLink\n                  to=\"/discover\"\n                  activeStyle={{ borderBottom: \"1px solid white\" }}\n                  style={{ textDecorationLine: \"none\" }}\n                >\n                  <Button sx={{ color: \"white\" }}>\n                    <ExploreIcon sx={{ fontSize: \"30px\" }} />{\" \"}\n                    <Typography sx={{ pl: \"10px\" }}>Discover</Typography>\n                  </Button>\n                </NavLink>\n                <NavLink\n                  to=\"/about\"\n                  activeStyle={{ borderBottom: \"1px solid white\" }}\n                  style={{ textDecorationLine: \"none\" }}\n                >\n                  <Button sx={{ color: \"white\" }}>\n                    <HelpIcon sx={{ fontSize: \"30px\" }} />\n                    <Typography sx={{ pl: \"10px\" }}>About</Typography>\n                  </Button>\n                </NavLink>\n                <NavLink\n                  to=\"/settings\"\n                  activeStyle={{ borderBottom: \"1px solid white\" }}\n                  style={{ textDecorationLine: \"none\" }}\n                >\n                  <Button sx={{ color: \"white\" }}>\n                    <SettingsIcon sx={{ fontSize: \"30px\" }} />\n                    <Typography sx={{ pl: \"10px\" }}>Settings</Typography>\n                  </Button>\n                </NavLink>\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Navigation);\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/WelcomePage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/SignupFormPage/index.js",["107","108"],"import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  Button,\n  Alert,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport * as sessionActions from \"../../store/session\";\n\nimport \"./signup.css\";\n\nconst SignupFormPage = ({ switchToLogin }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateUsername = (e) => setUsername(e.target.value);\n  const updateEmail = (e) => setEmail(e.target.value);\n  const updatedPassword = (e) => setPassword(e.target.value);\n  const updatedConfirmPassword = (e) => setConfirmPassword(e.target.value);\n\n  const sessionUser = useSelector((state) => state.session.user);\n  if (sessionUser) return <Redirect to=\"/discover\" />;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n\n      const payload = {\n        email,\n        username,\n        password,\n      };\n\n      dispatch(sessionActions.signup(payload)).catch((res) => {\n        console.log(res);\n        setErrors(res.data.errors);\n      });\n    }\n\n    return setErrors([\n      \"Confirm Password field must be the same as the Password\",\n    ]);\n  };\n\n  return (\n    <Card className=\"SignupFormPage\">\n      <CardHeader\n        align=\"center\"\n        subheader=\"Sign up\"\n        title={\n          <Typography\n            sx={{ fontSize: \"50px\", color: \"#301934\", fontWeight: \"bolder\" }}\n          >\n            Rumblr\n          </Typography>\n        }\n      />\n      <CardContent>\n        <form className=\"SignupForm\">\n          <TextField\n            onChange={updateUsername}\n            value={username}\n            label=\"create a username\"\n            required\n          />\n          <br />\n          <TextField\n            onChange={updateEmail}\n            value={email}\n            label=\"enter email\"\n            required\n          />\n          <br />\n          <TextField\n            type=\"password\"\n            onChange={updatedPassword}\n            label=\"create a password\"\n            required\n          />\n          <br />\n          <TextField\n            type=\"password\"\n            onChange={updatedConfirmPassword}\n            label=\"confirm password\"\n            required\n          />\n        </form>\n        {errors && (\n          <Box sx={{ paddingTop: \"20px\" }}>\n            {errors.map((error) => (\n              <Alert severity=\"error\">{error}</Alert>\n            ))}\n          </Box>\n        )}\n      </CardContent>\n      <CardActions className=\"SignupFormFooter\">\n        <div>\n          <Button onClick={switchToLogin}>Switch to log in</Button>\n        </div>\n        <div>\n          <Button onClick={onSubmit}>Join</Button>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SignupFormPage;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/AboutUsPage/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/CreatePost/index.js",["109","110"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/PostCard/index.js",["111","112","113","114","115","116","117"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/aws/s3.js",[],["118","119"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/ProfileDrawer/index.js",["120","121"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/QuickAction/index.js",[],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/DeletePost/index.js",["122","123","124"],"import { Button, IconButton, Popover, Typography } from \"@mui/material\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport { deletePost } from \"../../store/post\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\n\nconst DeletePost = ({ postId }) => {\n  const dispatch = useDispatch();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  const closePopover = () => setPopoverOpen(false);\n  const openPopover = (e) => {\n    setPopoverOpen(true);\n    setAnchorElement(e.currentTarget);\n  };\n\n  const deleteUserPost = () => dispatch(deletePost({ postId }));\n\n  return (\n    <>\n      <Delete\n        aria-describedby=\"delete-post\"\n        variant=\"contained\"\n        onClick={openPopover}\n      />\n      <Popover\n        id=\"delete-post\"\n        open={popoverOpen}\n        onClose={closePopover}\n        anchorEl={anchorElement}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <Button\n            sx={{ backgroundColor: \"red\" }}\n            variant=\"contained\"\n            onClick={deleteUserPost}\n          >\n            Delete\n          </Button>\n          <Button variant=\"outlined\" onClick={closePopover}>\n            Cancel\n          </Button>\n        </Box>\n      </Popover>\n      {/* <Delete onClick={openPopover} /> */}\n    </>\n  );\n};\n\nexport default DeletePost;\n","/Users/mustafamousa/Projects/Rumblr/frontend/src/components/EditPost/index.js",["125","126"],"/Users/mustafamousa/Projects/Rumblr/frontend/src/components/Notification/index.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":22,"column":9,"nodeType":"133","messageId":"134","endLine":22,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":12,"endColumn":8},{"ruleId":"131","severity":1,"message":"136","line":13,"column":3,"nodeType":"133","messageId":"134","endLine":13,"endColumn":9},{"ruleId":"131","severity":1,"message":"137","line":22,"column":9,"nodeType":"133","messageId":"134","endLine":22,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":19,"column":6,"nodeType":"140","endLine":19,"endColumn":27,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":10,"column":3,"nodeType":"133","messageId":"134","endLine":10,"endColumn":12},{"ruleId":"131","severity":1,"message":"143","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":18},{"ruleId":"131","severity":1,"message":"144","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":18},{"ruleId":"131","severity":1,"message":"145","line":18,"column":13,"nodeType":"133","messageId":"134","endLine":18,"endColumn":27},{"ruleId":"131","severity":1,"message":"137","line":29,"column":9,"nodeType":"133","messageId":"134","endLine":29,"endColumn":16},{"ruleId":"131","severity":1,"message":"146","line":30,"column":9,"nodeType":"133","messageId":"134","endLine":30,"endColumn":17},{"ruleId":"131","severity":1,"message":"136","line":2,"column":3,"nodeType":"133","messageId":"134","endLine":2,"endColumn":9},{"ruleId":"131","severity":1,"message":"137","line":22,"column":9,"nodeType":"133","messageId":"134","endLine":22,"endColumn":16},{"ruleId":"131","severity":1,"message":"147","line":22,"column":10,"nodeType":"133","messageId":"134","endLine":22,"endColumn":24},{"ruleId":"131","severity":1,"message":"148","line":22,"column":26,"nodeType":"133","messageId":"134","endLine":22,"endColumn":43},{"ruleId":"131","severity":1,"message":"149","line":3,"column":3,"nodeType":"133","messageId":"134","endLine":3,"endColumn":9},{"ruleId":"131","severity":1,"message":"150","line":5,"column":3,"nodeType":"133","messageId":"134","endLine":5,"endColumn":14},{"ruleId":"131","severity":1,"message":"151","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":18},{"ruleId":"131","severity":1,"message":"152","line":14,"column":8,"nodeType":"133","messageId":"134","endLine":14,"endColumn":23},{"ruleId":"131","severity":1,"message":"153","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":23},{"ruleId":"131","severity":1,"message":"154","line":20,"column":10,"nodeType":"133","messageId":"134","endLine":20,"endColumn":19},{"ruleId":"131","severity":1,"message":"155","line":22,"column":10,"nodeType":"133","messageId":"134","endLine":22,"endColumn":13},{"ruleId":"127","replacedBy":"156"},{"ruleId":"129","replacedBy":"157"},{"ruleId":"131","severity":1,"message":"158","line":18,"column":8,"nodeType":"133","messageId":"134","endLine":18,"endColumn":20},{"ruleId":"138","severity":1,"message":"159","line":32,"column":6,"nodeType":"140","endLine":32,"endColumn":25,"suggestions":"160"},{"ruleId":"131","severity":1,"message":"161","line":1,"column":18,"nodeType":"133","messageId":"134","endLine":1,"endColumn":28},{"ruleId":"131","severity":1,"message":"162","line":1,"column":39,"nodeType":"133","messageId":"134","endLine":1,"endColumn":49},{"ruleId":"131","severity":1,"message":"163","line":4,"column":23,"nodeType":"133","messageId":"134","endLine":4,"endColumn":34},{"ruleId":"131","severity":1,"message":"164","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":21},{"ruleId":"131","severity":1,"message":"158","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Avatar' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'TextField' is defined but never used.","'SearchIcon' is defined but never used.","'LogoutIcon' is defined but never used.","'sessionActions' is defined but never used.","'dispatch' is assigned a value but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'DeleteIcon' is defined but never used.","'SmartButtonIcon' is defined but never used.","'HeartButtonIcon' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.",["165"],["166"],"'Notification' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["168"],"'IconButton' is defined but never used.","'Typography' is defined but never used.","'useSelector' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch, loadLimit, sessionUser.id]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, profileDrawerOpen, userId]",{"range":"175","text":"176"},[661,682],"[dispatch, loadLimit, sessionUser.id]",[891,910],"[dispatch, profileDrawerOpen, userId]"]